[tox]
envlist = {py27,py34,py35,py36,py37,py38}{,-cov,-diffcov},qa,docs
skip_missing_interpreters = True


[testenv]
# Pin pip at version less than 19.1, see https://gitlab.com/python-devs/importlib_metadata/issues/54 for background
# Full discussion at https://discuss.python.org/t/pip-19-1-and-installing-in-editable-mode-with-pyproject-toml/1553
# One liner copied from https://github.com/ansible/molecule/pull/2009/files
install_command =
    python -c 'import subprocess, sys; pip_inst_cmd = sys.executable, "-m", "pip", "install"; subprocess.check_call(pip_inst_cmd + ("pip<19.1", )); subprocess.check_call(pip_inst_cmd + tuple(sys.argv[1:]))' {opts} {packages}
commands =
    !cov,!diffcov: python -m unittest discover {posargs}
    cov,diffcov: python -m coverage run {[coverage]rc} -m unittest discover {posargs}
    cov,diffcov: python -m coverage combine {[coverage]rc}
    cov: python -m coverage html {[coverage]rc}
    cov: python -m coverage xml {[coverage]rc}
    cov: python -m coverage report -m {[coverage]rc} --fail-under=100
    diffcov: python -m coverage xml {[coverage]rc}
    diffcov: diff-cover coverage.xml --html-report diffcov.html
    diffcov: diff-cover coverage.xml --fail-under=100
usedevelop = True
passenv =
    PYTHON*
    LANG*
    LC_*
    PYV
deps =
    cov,diffcov: coverage>=4.5
    diffcov: diff_cover
setenv =
    cov: COVERAGE_PROCESS_START={[coverage]rcfile}
    cov: COVERAGE_OPTIONS="-p"
    cov: COVERAGE_FILE={toxinidir}/.coverage
    py27: PYV=2
    py34,py35,py36,py37,py38: PYV=3
    # workaround deprecation warnings in pip's vendored packages
    PYTHONWARNINGS=ignore:Using or importing the ABCs:DeprecationWarning:pip._vendor
extras =
    testing


[testenv:qa]
basepython = python3.7
commands =
    python -m flake8 importlib_metadata
    mypy importlib_metadata
deps =
    mypy
    flake8
    flufl.flake8
extras =


[testenv:docs]
basepython = python3
commands =
    sphinx-build importlib_metadata/docs build/sphinx/html
extras =
    docs


[testenv:release]
basepython = python3
deps =
    twine
    wheel
    setuptools
    keyring
    setuptools_scm
passenv =
    TWINE_PASSWORD
setenv =
    TWINE_USERNAME = {env:TWINE_USERNAME:__token__}
commands =
    python setup.py sdist bdist_wheel
    python -m twine {posargs} upload dist/*


[coverage]
rcfile = {toxinidir}/coverage.ini
rc = --rcfile="{[coverage]rcfile}"


[flake8]
hang-closing = True
jobs = 1
max-line-length = 79
enable-extensions = U4
