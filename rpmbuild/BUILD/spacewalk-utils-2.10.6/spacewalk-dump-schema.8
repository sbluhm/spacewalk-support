.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SPACEWALK-DUMP-SCHEMA 8"
.TH SPACEWALK-DUMP-SCHEMA 8 "2020-03-10" "perl v5.26.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
spacewalk\-dump\-schema
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        spacewalk\-dump\-schema [\-\-from=oracle] [\-\-to=DB_BACKEND]
\&            [\-\-db=SID \-\-user=USERNAME \-\-password=PASSWORD]
\&
\&        spacewalk\-dump\-schema [\-\-from=postgresql] [\-\-to=DB_BACKEND]
\&            [\-\-db=DBNAME \-\-host=HOSTNAME \-\-port=PORT \-\-user=USERNAME \-\-password=PASSWORD]
\&
\&        spacewalk\-dump\-schema \-\-help
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBspacewalk-dump-schema\fR script dumps the content of Spacewalk's
database schema in format which can be fed to PostgreSQL's \fBpsql\fR
or Oracle's \fBsqlplus\fR. Thus it can be used to migrate between Spacewalk
with Oracle database backend and the one which uses PostgreSQL database
backend.
.PP
The script connects to the Oracle or PostgreSQL instance, so that one
must be running and accessible with given connect parameter.
.PP
The output is printed to the standard output. It can be piped to
\&\fBpsql\fR or \fBsqlplus\fR directly in which case the PostgreSQL or Oracle
server must also be running, or you can redirect it to a file and use
that file as input for \fBpsql\fR or \fBsqlplus\fR later.
.PP
When migrating to Oracle backend, only control \s-1SQL\s0 script is printed
on standard output. Content of tables is dumped into separate files,
which are then used as external tables. Location of table files
can be specified by parameter. Table files must be accessible from
machine where Oracle database is running for user running database
instance. Location of table files in database machine may need
to be manually altered in control file. If parameter is not specified,
location of table files is defaultly '/tmp/dumped\-tables/'.
.PP
The database schema in target backend must already exist, created by
(probably) \fBspacewalk-setup\fR. The output of this script does not
create any tables or other database objects, it only emits commands
to set sequences and table contents in the PostgreSQL or Oracle
database schema. Any existing content in tables is discarded, data
is not appended.
.PP
When migrating to Oracle, make sure your \s-1UNDO, TEMP\s0 and \s-1DATA\s0 tablespaces
are big enough otherwise migration fails.
.PP
The exit value is 0 upon success, non-zero value upon error.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 4
\&        spacewalk\-dump\-schema \-\-db=xe \e
\&                \-\-user=spacewalk \-\-password=o9k2HInsl \e
\&                | PGPASSWORD=o9k2HInsl psql \-h localhost \e
\&                        \-U spaceuser spaceschema
\&
\&        spacewalk\-dump\-schema \-\-from=oracle \-\-to=postgresql \-\-db=xe \e
\&                \-\-user=spacewalk \-\-password=o9k2HInsl \e
\&                | PGPASSWORD=o9k2HInsl psql \-h localhost \e
\&                        \-U spaceuser spaceschema
\&
\&        spacewalk\-dump\-schema \-\-to=oracle \-\-db=spaceschema \e
\&                \-\-host=localhost \-\-port=5433 \e
\&                \-\-user=spaceuser \-\-password=o9k2HInsl \e
\&                | NLS_LANG=AMERICAN_AMERICA.UTF8 sqlplus spaceuser/spacepw@//localhost/XE
\&
\&        spacewalk\-dump\-schema \-\-to=oracle \-\-dump\-dir=/tmp/dumped\-tables > control_script.sql
\&        ...
\&        spacewalk\-sql \-i < control_script.sql
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Jan Pazdziora
Jan Dobes
