.\" auto-generated by docbook2man-spec from docbook-utils package
.TH "SPACEWALK-SYNC-SETUP" "8" "10 MÃ¤rz 2020" "Version 1.0" ""
.SH NAME
spacewalk-sync-setup \- Utility for setting up master and slave relationships for synchronization between multiple servers
.SH SYNOPSIS
.sp
\fBspacewalk-sync-setup\fR [ \fBoptions \fI\&...\fB\fR ] 
.sp
 [ \fB--ss=\fISLAVE\fB\fR ]  [ \fB--slave-server=\fISLAVE\fB\fR ] 
.sp
 [ \fB--sl=\fISLAVE_LOGIN\fB\fR ]  [ \fB--slave-login=\fISLAVE_LOGIN\fB\fR ] 
.sp
 [ \fB--sp=\fISLAVE_PASSWORD\fB\fR ]  [ \fB--slave-password=\fISLAVE_PASSWORD\fB\fR ] 
.sp
 [ \fB--ms=\fIMASTER\fB\fR ]  [ \fB--master-server=\fIMASTER\fB\fR ] 
.sp
 [ \fB--ml=\fIMASTER_LOGIN\fB\fR ]  [ \fB--master-login=\fIMASTER_LOGIN\fB\fR ] 
.sp
 [ \fB--mp=\fIMASTER_PASSWORD\fB\fR ]  [ \fB--master-password=\fIMASTER_PASSWORD\fB\fR ] 
.sp
 [ \fB--md\fR ]  [ \fB--master-default\fR ] 
.sp
 [ \fB--cst\fR ]  [ \fB--create-slave-template\fR ] 
.sp
 [ \fB--cmt\fR ]  [ \fB--create-master-template\fR ] 
.sp
 [ \fB--ct\fR ]  [ \fB--create-templates\fR ] 
.sp
 [ \fB--msf=\fIFILE\fB\fR ]  [ \fB--master-setup-file=\fIFILE\fB\fR ] 
.sp
 [ \fB--ssf=\fIFILE\fB\fR ]  [ \fB--slave-setup-file=\fIFILE\fB\fR ] 
.sp
 [ \fB--dry-run\fR ] 
.sp
 [ \fB--apply\fR ] 
.sp
 [ \fB--default-ok\fR ] 
.sp
 [ \fB-h\fR ]  [ \fB--help\fR ] 
.sp
 [ \fB-d\fR ]  [ \fB--debug\fR ] 
.sp
 [ \fB-q\fR ]  [ \fB--quiet\fR ] 
.SH "DESCRIPTION"
.PP
\fBspacewalk-sync-setup\fR is a utility that sets up master and slave relationships for synchronization between multiple servers. Its purpose is to ease the burden required to map master-to-slave orgs.
.PP
A typical use-case workflow for the \fBspacewalk-sync-setup\fR utility will likely be users that have a master instance with a set of orgs that are identical to a set of orgs on the slave instance and will be synchronizing content from that master. Note that the names of the orgs are the key thing - because two servers do not share the same database, the ord ids in the database are not viable to use as identifiers between the master and slave servers.
.PP
In this example use-case, there is a master instance with orgs Org1..OrgN and a slave instance with orgs Org1..OrgN. The master has three channels, Org1-Public, Org1-Protected and Org1-Private. Org1-Protected is visible only to Org1 and Org3. The goal is to synchronize the slave to the master and end up with the same visibility.
.PP
A user that has access to the admin role on both master and slave servers would issue the following command on any machine that can access the public XMLRPC API of both instances:
.PP
\fBspacewalk-sync-setup --ms=\fIMASTER_FQDN\fB --ml=\fIMASTER_LOGIN\fB --mp=\fIMASTER_PASSWORD\fB --ss=\fISLAVE_FQDN\fB --sl=\fISLAVE_LOGIN\fB --sp=\fISLAVE_PASSWORD\fB --create-templates --apply\fR
.PP
At this point, the customer could then issue the \fBsatellite-sync\fR for each of their customer channels:
.PP
\fBsatellite-sync -c Org1-Public -c Org1-Protected -c Org1-Private\fR
.PP
and at the end of the sync, see the channels correctly synchronized, with a trust-hierarchy and channel-permissions setup matching that on the master.
.SH "CONNECTION OPTIONS"
.PP
Identify the instances we're going to connect to.
.TP
\fB-ss=\fISLAVE\fB, --slave-server=\fISLAVE\fB\fR
Name of a slave to connect to.
.TP
\fB--sl=\fISLAVE_LOGIN\fB, --slave-login=\fISLAVE_LOGIN\fB\fR
A sat-admin login for slave-server.
.TP
\fB--sp=\fISLAVE_PASSWORD\fB, --slave-password=\fISLAVE_PASSWORD\fB\fR
Password for login slave-login on slave-server.
.TP
\fB--ms=\fIMASTER\fB, --master-server=\fIMASTER\fB\fR
Name of a master to connect to.
.TP
\fB--ml=\fIMASTER_LOGIN\fB, --master-login=\fIMASTER_LOGIN\fB\fR
A sat-admin login for master-server.
.TP
\fB--mp=\fIMASTER_PASSWORD\fB, --master-password=\fIMASTER_PASSWORD\fB\fR
Password for login master-login on master-server.
.TP
\fB--md, --master-default\fR
Should the specified master be made the default-master in a specified template-file.
.SH "TEMPLATE OPTIONS"
.PP
Options for creating initial versions of the setup files.
.PP
NOTE: This will replace existing maching-specific stanzas with new content.
.TP
\fB--cst, --create-slave-template\fR
Create/update a setup file containing a stanza for the slave we're pointed at, based on information from the master we're pointed at.
.TP
\fB--cmt, --create-master-template\fR
Create/update a setup file stanza for the master we're pointed at, based on information from the slave we're pointed at.
.TP
\fB--ct, --create-templates\fR
Create both a master and a slave setup file, for the master/slave pair we're pointed at.
.SH "SETUP OPTIONS"
.PP
Specify the setup files we're actually going to apply to a slave/master.
.TP
\fB--msf=\fIFILE\fB, --master-setup-file=\fIFILE\fB\fR
Specify the master-setup-file we should use.
.TP
\fB--ssf=\fIFILE\fB, --slave-setup-file=\fIFILE\fB\fR
Specify the slave-setup-file we should use.
.SH "ACTION OPTIONS"
.PP
Should we actually affect the specified instances?
.TP
\fB--dry-run\fR
Don't actually change anything, but tell us what you would have done.
.TP
\fB--apply\fR
Make the changes specified by the setup files to the specified spacewalk instances.
.TP
\fB--default-ok\fR
Even if I don't explicitly tell you about a master or slave on the command-line, it's ok to try to apply changes to them!
.SH "UTILITY OPTIONS"
.TP
\fB-h, --help\fR
Show the help message and exit.
.TP
\fB-d, --debug\fR
Log debugging output.
.TP
\fB-q, --quiet\fR
Log only errors.
.SH "AUTHORS"

Grant Gainey<ggainey@redhat.com>

Eric Herget<eherget@redhat.com>
