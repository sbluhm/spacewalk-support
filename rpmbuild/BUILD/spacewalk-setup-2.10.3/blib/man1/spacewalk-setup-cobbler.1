.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SPACEWALK-SETUP-COBBLER 1"
.TH SPACEWALK-SETUP-COBBLER 1 "2020-03-11" "perl v5.26.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
spacewalk\-setup\-cobbler \- utility for configuring cobbler services to work with
Spacewalk / Satellite
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBspacewalk-setup-cobbler\fR
[\fB\-\-help\fR]
[\fB\-\-verbose\fR]
[\fB\-\-macros macro1:macro1value,macro2:macro2value...\fR]
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-macros\fR" 5
.IX Item "--macros"
Specify macro names and corresponding macro values that will be used for
substitution for correct document modification. You can specify multiple
macro:value pairs which you need to delimit by commas.
.Sp
Example: \-\-macros hostname:host.domain.org
.IP "\fB\-\-verbose\fR" 5
.IX Item "--verbose"
Verbose script operation.
.IP "\fB\-\-help\fR" 5
.IX Item "--help"
Print help message.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBspacewalk-setup-cobbler\fR is a utility for configuring cobbler to work
with Spacewalk / Satellite. The script uses template documents to modify
default / existing cobbler configuration.
.PP
Ordinarily, spacewalk-setup-cobbler is called by \fBspacewalk\-setup\fR\|(1) during
initial Spacewalk / Satellite configuration or upgrade.
.PP
The workflow of the script is:
.IP "\(bu" 5
For each of the cobbler configuration files, the script reads appropriate
template file.
.IP "\(bu" 5
Substitutes macros as found in template files with expanded values.
.IP "\(bu" 5
Reads particular cobbler configuration files and substitutes default / existing
values with values from template files.
.IP "\(bu" 5
Resulting configuration files are written out while the original files are backed up.
.SH "TEMPLATE FILES"
.IX Header "TEMPLATE FILES"
Basename of a template files must be the same as the basename of
the corresponding configuration file.
.PP
A template file for an INI-style configuration file (such as
/etc/cobbler/modules.conf) has the following format:
.PP
\&\f(CW\*(C`section parameter value\*(C'\fR
.PP
A template file for a key: value type of configuration file (such as
/etc/cobbler/settings) has the following format:
.PP
\&\f(CW\*(C`parameter value\*(C'\fR
.PP
In both cases, string enclosed in '@' signs (e.g. \f(CW@hostname\fR@) denotes a macro
name rather than an actual value.
.SH "MACROS"
.IX Header "MACROS"
Currently, the only recognized macro is \fBhostname\fR. If not specified on
command line, the hostname will be determined automatically.
.SH "FILES"
.IX Header "FILES"
Template files used for modification of existing cobbler configuration files:
.PP
\&\fI/usr/share/spacewalk/setup/cobbler/modules.conf\fR
.PP
\&\fI/usr/share/spacewalk/setup/cobbler/settings\fR
.PP
Cobbler configuration files modified by spacewalk-setup-cobbler:
.PP
\&\fI/etc/cobbler/modules.conf\fR
.PP
\&\fI/etc/cobbler/settings\fR
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBspacewalk-setup\fR(1) \- Spacewalk setup program
.PP
\&\fBcobbler\fR(1) \- Cobbler manual page
.SH "AUTHORS"
.IX Header "AUTHORS"
Milan Zazrivec
