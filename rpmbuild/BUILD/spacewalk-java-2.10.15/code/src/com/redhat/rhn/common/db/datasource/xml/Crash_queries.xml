<datasource_modes>

<mode name="list_identical_crashes_for_org" class="com.redhat.rhn.frontend.dto.IdenticalCrashesDto">
    <query params="org_id, user_id">
select sc.uuid as uuid,
       case when count(distinct sc.component) = 1
            then min(sc.component)
            else NULL
       end as component,
       count(distinct sc.server_id) as system_count,
       sum(sc.count) as total_crash_count,
       max(sc.modified) as last_crash_report
  from rhnServerCrash sc,
       rhnServer s,
       rhnUserServerPerms usp
 where sc.uuid is not null
       and s.id = sc.server_id
       and usp.server_id = s.id
       and s.org_id = :org_id
       and usp.user_id = :user_id
 group by uuid
 order by total_crash_count desc
    </query>
</mode>

<mode name="list_crash_details_for_uuid" class="com.redhat.rhn.frontend.dto.IdenticalCrashesDto">
    <query params="org_id, user_id, uuid">
select sc.uuid as uuid,
       count(distinct sc.server_id) as system_count,
       sum(sc.count) as total_crash_count,
       max(sc.modified) as last_crash_report
  from rhnServerCrash sc,
       rhnServer s,
       rhnUserServerPerms usp
 where sc.uuid is not null
       and s.id = sc.server_id
       and usp.server_id = s.id
       and s.org_id = :org_id
       and usp.user_id = :user_id
       and uuid = :uuid
 group by sc.uuid
    </query>
</mode>

<mode name="list_systems_for crash_uuid" class="com.redhat.rhn.frontend.dto.CrashSystemsDto">
    <query params="org_id, user_id, uuid">
select s.id as server_id,
       s.name as server_name,
       sc.id as crash_id,
       sc.count as crash_count,
       sc.component as crash_component,
       sc.modified as last_report
  from rhnServerCrash sc,
       rhnServer s,
       rhnUserServerPerms usp
 where s.id = sc.server_id
       and usp.server_id = s.id
       and s.org_id = :org_id
       and usp.user_id = :user_id
       and sc.uuid = :uuid
 order by crash_count desc, last_report desc
    </query>
</mode>

</datasource_modes>
