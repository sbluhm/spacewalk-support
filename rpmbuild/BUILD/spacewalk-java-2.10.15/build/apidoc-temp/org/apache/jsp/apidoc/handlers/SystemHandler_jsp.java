/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat9
 * Generated at: 2020-03-09 19:26:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.apidoc.handlers;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class SystemHandler_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n<head>\n<meta http-equiv=\"cache-control\" content=\"no-cache\" />\n\n<style type=\"text/css\">\nul.apidoc {\n   list-style-image: url('/img/parent_node.gif');\n}\n\n.deprecated {\n   text-decoration: line-through;\n}\n</style>\n</head>\n<body>\n<div class=\"spacewalk-toolbar-h1\">\n<h1><i class=\"fa fa-gears\"></i>API Overview</h1>\n</div>\n\n<h2>Description</h2>\n<p><strong>Namespace</strong>:\nsystem\n</p>\n<p>Provides methods to access and modify registered system.</p>\n<span class=\"small-text\">( <a href=\"/rhn/apidoc/index.jsp\">Return to API Overview</a> )</span>\n<hr />\n\n<div class=\"rounded-box\">\n<h2><a name=\"top\">Available methods</a></h2>\n<ul class=\"apidoc\">\n\n<li><a href=\"#addEntitlements\"/>addEntitlements</a></li>\n<li><a href=\"#addNote\"/>addNote</a></li>\n<li><a href=\"#applyErrata\"/>applyErrata</a></li>\n<li><a href=\"#comparePackageProfile\"/>comparePackageProfile</a></li>\n<li><a href=\"#comparePackages\"/>comparePackages</a></li>\n<li><a href=\"#createPackageProfile\"/>createPackageProfile</a></li>\n<li><a href=\"#createSystemRecord\"/>createSystemRecord</a></li>\n");
      out.write("<li><a href=\"#deleteCustomValues\"/>deleteCustomValues</a></li>\n<li><a href=\"#deleteGuestProfiles\"/>deleteGuestProfiles</a></li>\n<li><a href=\"#deleteNote\"/>deleteNote</a></li>\n<li><a href=\"#deleteNotes\"/>deleteNotes</a></li>\n<li><a href=\"#deletePackageProfile\"/>deletePackageProfile</a></li>\n<li><a href=\"#deleteSystem\"/>deleteSystem</a></li>\n<li><a href=\"#deleteSystem\"/>deleteSystem</a></li>\n<li><a href=\"#deleteSystems\"/>deleteSystems</a></li>\n<li><a href=\"#deleteTagFromSnapshot\"/>deleteTagFromSnapshot</a></li>\n<li><a href=\"#downloadSystemId\"/>downloadSystemId</a></li>\n<li><a href=\"#getConnectionPath\"/>getConnectionPath</a></li>\n<li><a href=\"#getCpu\"/>getCpu</a></li>\n<li><a href=\"#getCustomValues\"/>getCustomValues</a></li>\n<li><a href=\"#getDetails\"/>getDetails</a></li>\n<li><a href=\"#getDevices\"/>getDevices</a></li>\n<li><a href=\"#getDmi\"/>getDmi</a></li>\n<li><a href=\"#getEntitlements\"/>getEntitlements</a></li>\n<li><a href=\"#getEventHistory\"/>getEventHistory</a></li>\n<li><a href=\"#getId\"/>getId</a></li>\n<li><a href=\"#getMemory\"/>getMemory</a></li>\n");
      out.write("<li><a href=\"#getName\"/>getName</a></li>\n<li><a href=\"#getNetwork\"/>getNetwork</a></li>\n<li><a href=\"#getNetworkDevices\"/>getNetworkDevices</a></li>\n<li><a href=\"#getOsaPing\"/>getOsaPing</a></li>\n<li><a href=\"#getRegistrationDate\"/>getRegistrationDate</a></li>\n<li><a href=\"#getRelevantErrata\"/>getRelevantErrata</a></li>\n<li><a href=\"#getRelevantErrataByType\"/>getRelevantErrataByType</a></li>\n<li><a href=\"#getRunningKernel\"/>getRunningKernel</a></li>\n<li><a href=\"#getScriptActionDetails\"/>getScriptActionDetails</a></li>\n<li><a href=\"#getScriptResults\"/>getScriptResults</a></li>\n<li><a href=\"#getSubscribedBaseChannel\"/>getSubscribedBaseChannel</a></li>\n<li><a href=\"#getSystemCurrencyMultipliers\"/>getSystemCurrencyMultipliers</a></li>\n<li><a href=\"#getSystemCurrencyScores\"/>getSystemCurrencyScores</a></li>\n<li><a href=\"#getUnscheduledErrata\"/>getUnscheduledErrata</a></li>\n<li><a href=\"#getUuid\"/>getUuid</a></li>\n<li><a href=\"#getVariables\"/>getVariables</a></li>\n<li><a href=\"#isNvreInstalled\"/>isNvreInstalled</a></li>\n");
      out.write("<li><a href=\"#isNvreInstalled\"/>isNvreInstalled</a></li>\n<li><a href=\"#listActivationKeys\"/>listActivationKeys</a></li>\n<li><a href=\"#listActiveSystems\"/>listActiveSystems</a></li>\n<li><a href=\"#listActiveSystemsDetails\"/>listActiveSystemsDetails</a></li>\n<li><a href=\"#listAdministrators\"/>listAdministrators</a></li>\n<li><a href=\"#listAllInstallablePackages\"/>listAllInstallablePackages</a></li>\n<li><a href=\"#listBaseChannels\"/>listBaseChannels</a></li>\n<li><a href=\"#listChildChannels\"/>listChildChannels</a></li>\n<li><a href=\"#listDuplicatesByHostname\"/>listDuplicatesByHostname</a></li>\n<li><a href=\"#listDuplicatesByIp\"/>listDuplicatesByIp</a></li>\n<li><a href=\"#listDuplicatesByMac\"/>listDuplicatesByMac</a></li>\n<li><a href=\"#listExtraPackages\"/>listExtraPackages</a></li>\n<li><a href=\"#listGroups\"/>listGroups</a></li>\n<li><a href=\"#listInactiveSystems\"/>listInactiveSystems</a></li>\n<li><a href=\"#listInactiveSystems\"/>listInactiveSystems</a></li>\n<li><a href=\"#listLatestAvailablePackage\"/>listLatestAvailablePackage</a></li>\n");
      out.write("<li><a href=\"#listLatestInstallablePackages\"/>listLatestInstallablePackages</a></li>\n<li><a href=\"#listLatestUpgradablePackages\"/>listLatestUpgradablePackages</a></li>\n<li><a href=\"#listNewerInstalledPackages\"/>listNewerInstalledPackages</a></li>\n<li><a href=\"#listNotes\"/>listNotes</a></li>\n<li><a href=\"#listOlderInstalledPackages\"/>listOlderInstalledPackages</a></li>\n<li><a href=\"#listOutOfDateSystems\"/>listOutOfDateSystems</a></li>\n<li><a href=\"#listPackageProfiles\"/>listPackageProfiles</a></li>\n<li><a href=\"#listPackages\"/>listPackages</a></li>\n<li><a href=\"#listPackagesFromChannel\"/>listPackagesFromChannel</a></li>\n<li><a href=\"#listPhysicalSystems\"/>listPhysicalSystems</a></li>\n<li><a href=\"#listSubscribableBaseChannels\"/>listSubscribableBaseChannels</a></li>\n<li><a href=\"#listSubscribableChildChannels\"/>listSubscribableChildChannels</a></li>\n<li><a href=\"#listSubscribedChildChannels\"/>listSubscribedChildChannels</a></li>\n<li><a href=\"#listSuggestedReboot\"/>listSuggestedReboot</a></li>\n<li><a href=\"#listSystemEvents\"/>listSystemEvents</a></li>\n");
      out.write("<li><a href=\"#listSystemEvents\"/>listSystemEvents</a></li>\n<li><a href=\"#listSystems\"/>listSystems</a></li>\n<li><a href=\"#listSystemsWithExtraPackages\"/>listSystemsWithExtraPackages</a></li>\n<li><a href=\"#listSystemsWithPackage\"/>listSystemsWithPackage</a></li>\n<li><a href=\"#listSystemsWithPackage\"/>listSystemsWithPackage</a></li>\n<li><a href=\"#listUngroupedSystems\"/>listUngroupedSystems</a></li>\n<li><a href=\"#listUserSystems\"/>listUserSystems</a></li>\n<li><a href=\"#listUserSystems\"/>listUserSystems</a></li>\n<li><a href=\"#listVirtualGuests\"/>listVirtualGuests</a></li>\n<li><a href=\"#listVirtualHosts\"/>listVirtualHosts</a></li>\n<li><a href=\"#obtainReactivationKey\"/>obtainReactivationKey</a></li>\n<li><a href=\"#obtainReactivationKey\"/>obtainReactivationKey</a></li>\n<li><a href=\"#provisionSystem\"/>provisionSystem</a></li>\n<li><a href=\"#provisionSystem\"/>provisionSystem</a></li>\n<li><a href=\"#provisionVirtualGuest\"/>provisionVirtualGuest</a></li>\n<li><a href=\"#provisionVirtualGuest\"/>provisionVirtualGuest</a></li>\n<li><a href=\"#provisionVirtualGuest\"/>provisionVirtualGuest</a></li>\n");
      out.write("<li><a href=\"#removeEntitlements\"/>removeEntitlements</a></li>\n<li><a href=\"#scheduleApplyErrata\"/>scheduleApplyErrata</a></li>\n<li><a href=\"#scheduleApplyErrata\"/>scheduleApplyErrata</a></li>\n<li><a href=\"#scheduleApplyErrata\"/>scheduleApplyErrata</a></li>\n<li><a href=\"#scheduleApplyErrata\"/>scheduleApplyErrata</a></li>\n<li><a href=\"#scheduleApplyErrata\"/>scheduleApplyErrata</a></li>\n<li><a href=\"#scheduleApplyErrata\"/>scheduleApplyErrata</a></li>\n<li><a href=\"#scheduleApplyErrata\"/>scheduleApplyErrata</a></li>\n<li><a href=\"#scheduleApplyErrata\"/>scheduleApplyErrata</a></li>\n<li><a href=\"#scheduleCertificateUpdate\"/>scheduleCertificateUpdate</a></li>\n<li><a href=\"#scheduleCertificateUpdate\"/>scheduleCertificateUpdate</a></li>\n<li><a href=\"#scheduleGuestAction\"/>scheduleGuestAction</a></li>\n<li><a href=\"#scheduleGuestAction\"/>scheduleGuestAction</a></li>\n<li><a href=\"#scheduleHardwareRefresh\"/>scheduleHardwareRefresh</a></li>\n<li><a href=\"#schedulePackageInstall\"/>schedulePackageInstall</a></li>\n<li><a href=\"#schedulePackageInstall\"/>schedulePackageInstall</a></li>\n");
      out.write("<li><a href=\"#schedulePackageInstall\"/>schedulePackageInstall</a></li>\n<li><a href=\"#schedulePackageInstall\"/>schedulePackageInstall</a></li>\n<li><a href=\"#schedulePackageInstallByNevra\"/>schedulePackageInstallByNevra</a></li>\n<li><a href=\"#schedulePackageInstallByNevra\"/>schedulePackageInstallByNevra</a></li>\n<li><a href=\"#schedulePackageInstallByNevra\"/>schedulePackageInstallByNevra</a></li>\n<li><a href=\"#schedulePackageInstallByNevra\"/>schedulePackageInstallByNevra</a></li>\n<li><a href=\"#schedulePackageRefresh\"/>schedulePackageRefresh</a></li>\n<li><a href=\"#schedulePackageRemove\"/>schedulePackageRemove</a></li>\n<li><a href=\"#schedulePackageRemove\"/>schedulePackageRemove</a></li>\n<li><a href=\"#schedulePackageRemove\"/>schedulePackageRemove</a></li>\n<li><a href=\"#schedulePackageRemove\"/>schedulePackageRemove</a></li>\n<li><a href=\"#schedulePackageRemoveByNevra\"/>schedulePackageRemoveByNevra</a></li>\n<li><a href=\"#schedulePackageRemoveByNevra\"/>schedulePackageRemoveByNevra</a></li>\n<li><a href=\"#schedulePackageRemoveByNevra\"/>schedulePackageRemoveByNevra</a></li>\n");
      out.write("<li><a href=\"#schedulePackageRemoveByNevra\"/>schedulePackageRemoveByNevra</a></li>\n<li><a href=\"#scheduleReboot\"/>scheduleReboot</a></li>\n<li><a href=\"#scheduleScriptRun\"/>scheduleScriptRun</a></li>\n<li><a href=\"#scheduleScriptRun\"/>scheduleScriptRun</a></li>\n<li><a href=\"#scheduleScriptRun\"/>scheduleScriptRun</a></li>\n<li><a href=\"#scheduleScriptRun\"/>scheduleScriptRun</a></li>\n<li><a href=\"#scheduleSyncPackagesWithSystem\"/>scheduleSyncPackagesWithSystem</a></li>\n<li><a href=\"#searchByName\"/>searchByName</a></li>\n<li><a href=\"#sendOsaPing\"/>sendOsaPing</a></li>\n<li><a href=\"#setBaseChannel\"/>setBaseChannel</a></li>\n<li><a href=\"#setBaseChannel\"/>setBaseChannel</a></li>\n<li><a href=\"#setChildChannels\"/>setChildChannels</a></li>\n<li><a href=\"#setCustomValues\"/>setCustomValues</a></li>\n<li><a href=\"#setDetails\"/>setDetails</a></li>\n<li><a href=\"#setGroupMembership\"/>setGroupMembership</a></li>\n<li><a href=\"#setGuestCpus\"/>setGuestCpus</a></li>\n<li><a href=\"#setGuestMemory\"/>setGuestMemory</a></li>\n<li><a href=\"#setLockStatus\"/>setLockStatus</a></li>\n");
      out.write("<li><a href=\"#setPrimaryInterface\"/>setPrimaryInterface</a></li>\n<li><a href=\"#setProfileName\"/>setProfileName</a></li>\n<li><a href=\"#setVariables\"/>setVariables</a></li>\n<li><a href=\"#tagLatestSnapshot\"/>tagLatestSnapshot</a></li>\n<li><a href=\"#unentitle\"/>unentitle</a></li>\n<li><a href=\"#upgradeEntitlement\"/>upgradeEntitlement</a></li>\n<li><a href=\"#whoRegistered\"/>whoRegistered</a></li>\n</ul>\n</div>\n<hr />\n\n<h3> <a name=\"addEntitlements\" href=\"#top\">Method: addEntitlements</a></h3>\nDescription:<br />\nAdd entitlements to a server. Entitlements a server already has\n are quietly ignored.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n<ul>\n    <li>string - entitlementLabel - one of following:\n virtualization_host, enterprise_entitled</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"addNote\" href=\"#top\">Method: addNote</a></h3>\nDescription:<br />\n");
      out.write("Add a new note to the given server.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string subject - What the note is about.\n </li>\n<li>\n\n    string body - Content of the note.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3 class=\"deprecated\"><a name=\"applyErrata\" href=\"#top\">Method: applyErrata</a></h3>\nDescription:<br />\nSchedules an action to apply errata updates to a system.\n<p />\n\n\nDeprecated - being replaced by system.scheduleApplyErrata(string sessionKey,\n int serverId, array[int errataId]) <p />\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - errataId</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"comparePackageProfile\" href=\"#top\">Method: comparePackageProfile</a></h3>\nDescription:<br />\n");
      out.write("Compare a system's packages against a package profile.  In\n the result returned, 'this_system' represents the server provided as an input\n and 'other_system' represents the profile provided as an input.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string profileLabel\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n              \n\n\t     struct - Package Metadata\n\t<ul>\n      \t<li> int \"package_name_id\"</li>\n      \t<li> string \"package_name\"</li>\n      \t<li> string \"package_epoch\"</li>\n      \t<li> string \"package_version\"</li>\n      \t<li> string \"package_release\"</li>\n      \t<li> string \"package_arch\"</li>\n          <li> string \"this_system\" - Version of package on this system. </li>\n          <li> string \"other_system\" - Version of package on the other system. </li>\n      \t<li> int \"comparison\"</li>\n          \t<ul>\n              \t<li>0 - No difference.</li>\n              \t<li>1 - Package on this system only.</li>\n              \t<li>2 - Newer package version on this system.</li>\n");
      out.write("              \t<li>3 - Package on other system only.</li>\n              \t<li>4 - Newer package version on other system.</li>\n           \t</ul>\n   \t</ul>\n \n          </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"comparePackages\" href=\"#top\">Method: comparePackages</a></h3>\nDescription:<br />\nCompares the packages installed on two systems.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int thisServerId\n </li>\n<li>\n\n    int otherServerId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n              \n\n\t     struct - Package Metadata\n\t<ul>\n      \t<li> int \"package_name_id\"</li>\n      \t<li> string \"package_name\"</li>\n      \t<li> string \"package_epoch\"</li>\n      \t<li> string \"package_version\"</li>\n      \t<li> string \"package_release\"</li>\n      \t<li> string \"package_arch\"</li>\n          <li> string \"this_system\" - Version of package on this system. </li>\n          <li> string \"other_system\" - Version of package on the other system. </li>\n      \t<li> int \"comparison\"</li>\n");
      out.write("          \t<ul>\n              \t<li>0 - No difference.</li>\n              \t<li>1 - Package on this system only.</li>\n              \t<li>2 - Newer package version on this system.</li>\n              \t<li>3 - Package on other system only.</li>\n              \t<li>4 - Newer package version on other system.</li>\n           \t</ul>\n   \t</ul>\n \n          </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"createPackageProfile\" href=\"#top\">Method: createPackageProfile</a></h3>\nDescription:<br />\nCreate a new stored Package Profile from a systems\n      installed package list.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string profileLabel\n </li>\n<li>\n\n    string description\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"createSystemRecord\" href=\"#top\">Method: createSystemRecord</a></h3>\nDescription:<br />\nCreates a cobbler system record with the specified kickstart label\n");
      out.write("<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string ksLabel\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"deleteCustomValues\" href=\"#top\">Method: deleteCustomValues</a></h3>\nDescription:<br />\nDelete the custom values defined for the custom system information keys\n provided from the given system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n<ul>\n    <li>string - customInfoLabel</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n (Note: Attempt to delete values of non-existing keys throws exception. Attempt to\n delete value of existing key which has assigned no values doesn't throw exception.) \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"deleteGuestProfiles\" href=\"#top\">Method: deleteGuestProfiles</a></h3>\nDescription:<br />\n");
      out.write("Delete the specified list of guest profiles for a given host\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int hostId\n </li>\n<li>\n\narray:\n<ul>\n    <li>string - guestNames</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"deleteNote\" href=\"#top\">Method: deleteNote</a></h3>\nDescription:<br />\nDeletes the given note from the server.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    int noteId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"deleteNotes\" href=\"#top\">Method: deleteNotes</a></h3>\nDescription:<br />\nDeletes all notes from the server.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n");
      out.write(" \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"deletePackageProfile\" href=\"#top\">Method: deletePackageProfile</a></h3>\nDescription:<br />\nDelete a package profile\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int profileId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"deleteSystem\" href=\"#top\">Method: deleteSystem</a></h3>\nDescription:<br />\nDelete a system given its client certificate.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string systemid - systemid file\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\nAvailable since: 10.10 <p />\n<hr />\n\n<h3> <a name=\"deleteSystem\" href=\"#top\">Method: deleteSystem</a></h3>\nDescription:<br />\nDelete a system given its server id synchronously\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n");
      out.write("\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"deleteSystems\" href=\"#top\">Method: deleteSystems</a></h3>\nDescription:<br />\nDelete systems given a list of system ids asynchronously.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"deleteTagFromSnapshot\" href=\"#top\">Method: deleteTagFromSnapshot</a></h3>\nDescription:<br />\nDeletes tag from system snapshot\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string tagName\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"downloadSystemId\" href=\"#top\">Method: downloadSystemId</a></h3>\nDescription:<br />\nGet the system ID file for a given server.\n");
      out.write("<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nstring \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getConnectionPath\" href=\"#top\">Method: getConnectionPath</a></h3>\nDescription:<br />\nGet the list of proxies that the given system connects\n through in order to reach the server.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n\n\t     struct - proxy connection path details\n\t<ul>\n             <li> int \"position\" - Position of proxy in chain. The proxy that the\n             system connects directly to is listed in position 1. </li>\n             <li> int \"id\" - Proxy system id </li>\n             <li> string \"hostname\" - Proxy host name </li>\n  \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getCpu\" href=\"#top\">Method: getCpu</a></h3>\nDescription:<br />\nGets the CPU information of a system.\n");
      out.write("<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\n\n\t     struct - CPU\n\t<ul>\n      \t<li> string \"cache\"</li>\n      \t<li> string \"family\"</li>\n      \t<li> string \"mhz\"</li>\n      \t<li> string \"flags\"</li>\n      \t<li> string \"model\"</li>\n      \t<li> string \"vendor\"</li>\n      \t<li> string \"arch\"</li>\n      \t<li> string \"stepping\"</li>\n      \t<li> string \"count\"</li>\n      \t<li> int \"socket_count (if available)\"</li>\n  \t</ul>\n  \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getCustomValues\" href=\"#top\">Method: getCustomValues</a></h3>\nDescription:<br />\nGet the custom data values defined for the server.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\t     struct - custom value\n\t<ul>\n          \t<li> string \"custom info label\"</li>\n      \t</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getDetails\" href=\"#top\">Method: getDetails</a></h3>\n");
      out.write("Description:<br />\nGet system details.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\n\n\t     struct - server details\n\t<ul>\n             <li> int \"id\" - System id </li>\n         \t<li> string \"profile_name\"</li>\n             <li> string \"base_entitlement\" - System's base entitlement label </li>\n\n             <li>array \"string\"\n        <ul>\n            <li>addon_entitlements System's addon entitlements labels,\n                       currently only 'virtualization_host'</li>\n        </ul>\n    </li>\n              <li> boolean \"auto_update\" - True if system has auto errata updates\n                                          enabled. </li>\n              <li> string \"release\" - The Operating System release (i.e. 4AS,\n                      5Server </li>\n          \t<li> string \"address1\"</li>\n          \t<li> string \"address2\"</li>\n          \t<li> string \"city\"</li>\n          \t<li> string \"state\"</li>\n          \t<li> string \"country\"</li>\n");
      out.write("          \t<li> string \"building\"</li>\n          \t<li> string \"room\"</li>\n          \t<li> string \"rack\"</li>\n          \t<li> string \"description\"</li>\n          \t<li> string \"hostname\"</li>\n          \t<li> dateTime.iso8601 \"last_boot\"</li>\n              <li> string \"osa_status\" - Either 'unknown', 'offline', or 'online'. </li>\n              <li> boolean \"lock_status\" - True indicates that the system is locked.\n           False indicates that the system is unlocked. </li>\n              <li> string \"virtualization\" - Virtualization type -\n           for virtual guests only (optional) </li>\n  \t</ul>\n  \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getDevices\" href=\"#top\">Method: getDevices</a></h3>\nDescription:<br />\nGets a list of devices for a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n              \n\n\t     struct - device\n\t<ul>\n          <li> string \"device\" - optional </li>\n          <li> string \"device_class\" - Includes CDROM, FIREWIRE, HD, USB, VIDEO,\n");
      out.write("                  OTHER, etc. </li>\n      \t<li> string \"driver\"</li>\n      \t<li> string \"description\"</li>\n      \t<li> string \"bus\"</li>\n      \t<li> string \"pcitype\"</li>\n   \t</ul>\n \n              </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getDmi\" href=\"#top\">Method: getDmi</a></h3>\nDescription:<br />\nGets the DMI information of a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\n\n\t     struct - DMI\n\t<ul>\n          \t<li> string \"vendor\"</li>\n          \t<li> string \"system\"</li>\n          \t<li> string \"product\"</li>\n          \t<li> string \"asset\"</li>\n          \t<li> string \"board\"</li>\n              <li> string \"bios_release\" - (optional) </li>\n              <li> string \"bios_vendor\" - (optional) </li>\n              <li> string \"bios_version\" - (optional) </li>\n      \t</ul>\n  \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getEntitlements\" href=\"#top\">Method: getEntitlements</a></h3>\nDescription:<br />\n");
      out.write("Gets the entitlements for a given server.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>string - entitlement_label</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getEventHistory\" href=\"#top\">Method: getEventHistory</a></h3>\nDescription:<br />\nReturns a list history items associated with the system, ordered\n             from newest to oldest. Note that the details may be empty for\n             events that were scheduled against the system (as compared to instant).\n             For more information on such events, see the system.listSystemEvents\n             operation.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n           \n\n\t     struct - History Event\n\t<ul>\n          <li> dateTime.iso8601 \"completed\" - Date that\n          the event occurred (optional) </li>\n          <li> string \"summary\" - Summary of the event </li>\n");
      out.write("          <li> string \"details\" - Details of the event </li>\n  \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getId\" href=\"#top\">Method: getId</a></h3>\nDescription:<br />\nGet system IDs and last check in information for the given system name.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string systemName\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n              \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n \t</ul>\n \n          </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getMemory\" href=\"#top\">Method: getMemory</a></h3>\nDescription:<br />\nGets the memory information for a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n");
      out.write("\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\t     struct - memory\n\t<ul>\n          <li> int \"ram\" - The amount of physical memory in MB. </li>\n          <li> int \"swap\" - The amount of swap space in MB. </li>\n  \t</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getName\" href=\"#top\">Method: getName</a></h3>\nDescription:<br />\nGet system name and last check in information for the given system ID.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\t     struct - name info\n\t<ul>\n          <li> int \"id\" - Server id </li>\n          <li> string \"name\" - Server name </li>\n          <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n  \t</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getNetwork\" href=\"#top\">Method: getNetwork</a></h3>\nDescription:<br />\nGet the addresses and hostname for a given server.\n<p />\n\n\n\n\nParameters:<br />\n");
      out.write("<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\t     struct - network info\n\t<ul>\n                  <li> string \"ip\" - IPv4 address of server </li>\n                  <li> string \"ip6\" - IPv6 address of server </li>\n                  <li> string \"hostname\" - Hostname of server </li>\n          \t</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getNetworkDevices\" href=\"#top\">Method: getNetworkDevices</a></h3>\nDescription:<br />\nReturns the network devices for the given server.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n\n\t     struct - network device\n\t<ul>\n              <li> string \"ip\" - IP address assigned to this network device </li>\n              <li> string \"interface\" - Network interface assigned to device e.g.\n                              eth0 </li>\n              <li> string \"netmask\" - Network mask assigned to device </li>\n");
      out.write("              <li> string \"hardware_address\" - Hardware Address of device. </li>\n              <li> string \"module\" - Network driver used for this device. </li>\n              <li> string \"broadcast\" -  Broadcast address for device. </li>\n              <li> array \"ipv6\" - List of IPv6 addresses </li>\n            array:\n  <ul>\n   <li>\n               \t     struct - ipv6 address\n\t<ul>\n                     <li> string \"address\" - IPv6 address of this network device </li>\n                     <li> string \"netmask\" - IPv6 netmask of this network device </li>\n                     <li> string \"scope\" - IPv6 address scope </li>\n               \t</ul>\n            </li></ul>\n      \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getOsaPing\" href=\"#top\">Method: getOsaPing</a></h3>\nDescription:<br />\nget details about a ping sent to a system using OSA\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    User loggedInUser\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\t     struct - osaPing\n");
      out.write("\t<ul>\n              <li> String \"state\" - state of the system (unknown, online, offline) </li>\n              <li> dateTime.iso8601 \"lastMessageTime\" - time of the last received response\n          (1970/01/01 00:00:00 if never received a response) </li>\n              <li> dateTime.iso8601 \"lastPingTime\" - time of the last sent ping\n          (1970/01/01 00:00:00 if no ping is pending </li>\n      \t</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getRegistrationDate\" href=\"#top\">Method: getRegistrationDate</a></h3>\nDescription:<br />\nReturns the date the system was registered.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\ndateTime.iso8601 - The date the system was registered,\n in local time. \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getRelevantErrata\" href=\"#top\">Method: getRelevantErrata</a></h3>\nDescription:<br />\nReturns a list of all errata that are relevant to the system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n");
      out.write("\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n\n\t     struct - errata\n\t<ul>\n              <li> int \"id\" - Errata ID. </li>\n              <li> string \"date\" - Date erratum was created. </li>\n              <li> string \"update_date\" - Date erratum was updated. </li>\n              <li> string \"advisory_synopsis\" - Summary of the erratum. </li>\n              <li> string \"advisory_type\" - Type label such as Security, Bug Fix </li>\n              <li> string \"advisory_name\" - Name such as RHSA, etc </li>\n      \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getRelevantErrataByType\" href=\"#top\">Method: getRelevantErrataByType</a></h3>\nDescription:<br />\nReturns a list of all errata of the specified type that are\n relevant to the system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string advisoryType - type of advisory (one of\n of the following: 'Security Advisory', 'Product Enhancement Advisory',\n");
      out.write(" 'Bug Fix Advisory'\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n\n\t     struct - errata\n\t<ul>\n              <li> int \"id\" - Errata ID. </li>\n              <li> string \"date\" - Date erratum was created. </li>\n              <li> string \"update_date\" - Date erratum was updated. </li>\n              <li> string \"advisory_synopsis\" - Summary of the erratum. </li>\n              <li> string \"advisory_type\" - Type label such as Security, Bug Fix </li>\n              <li> string \"advisory_name\" - Name such as RHSA, etc </li>\n      \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getRunningKernel\" href=\"#top\">Method: getRunningKernel</a></h3>\nDescription:<br />\nReturns the running kernel of the given system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nstring \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getScriptActionDetails\" href=\"#top\">Method: getScriptActionDetails</a></h3>\n");
      out.write("Description:<br />\nReturns script details for script run actions\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int actionId - ID of the script run action.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\t     struct - Script details\n\t<ul>\n              <li> int \"id\" - action id </li>\n              <li> string \"content\" - script content </li>\n              <li> string \"run_as_user\" - Run as user </li>\n              <li> string \"run_as_group\" - Run as group </li>\n              <li> int \"timeout\" - Timeout in seconds </li>\n          array:\n  <ul>\n   <li>\n              \n\n\t     struct - script result\n\t<ul>\n          <li> int \"serverId\" - ID of the server the script runs on. </li>\n          <li> dateTime.iso8601 \"startDate\" - Time script began execution. </li>\n          <li> dateTime.iso8601 \"stopDate\" - Time script stopped execution. </li>\n          <li> int \"returnCode\" - Script execution return code. </li>\n          <li> string \"output\" - Output of the script (base64 encoded according\n");
      out.write("                to the output_enc64 attribute) </li>\n          <li> boolean \"output_enc64\" - Identifies base64 encoded output </li>\n  \t</ul>\n \n          </li></ul>\n      \t</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getScriptResults\" href=\"#top\">Method: getScriptResults</a></h3>\nDescription:<br />\nFetch results from a script execution. Returns an empty array if no\n results are yet available.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int actionId - ID of the script run action.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n              \n\n\t     struct - script result\n\t<ul>\n          <li> int \"serverId\" - ID of the server the script runs on. </li>\n          <li> dateTime.iso8601 \"startDate\" - Time script began execution. </li>\n          <li> dateTime.iso8601 \"stopDate\" - Time script stopped execution. </li>\n          <li> int \"returnCode\" - Script execution return code. </li>\n          <li> string \"output\" - Output of the script (base64 encoded according\n");
      out.write("                to the output_enc64 attribute) </li>\n          <li> boolean \"output_enc64\" - Identifies base64 encoded output </li>\n  \t</ul>\n \n         </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getSubscribedBaseChannel\" href=\"#top\">Method: getSubscribedBaseChannel</a></h3>\nDescription:<br />\nProvides the base channel of a given system\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\n\n\t     struct - channel\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n      \t<li> string \"label\"</li>\n      \t<li> string \"arch_name\"</li>\n      \t<li> string \"arch_label\"</li>\n      \t<li> string \"summary\"</li>\n      \t<li> string \"description\"</li>\n      \t<li> string \"checksum_label\"</li>\n      \t<li> dateTime.iso8601 \"last_modified\"</li>\n      \t<li> string \"maintainer_name\"</li>\n      \t<li> string \"maintainer_email\"</li>\n      \t<li> string \"maintainer_phone\"</li>\n      \t<li> string \"support_policy\"</li>\n      \t<li> string \"gpg_key_url\"</li>\n");
      out.write("      \t<li> string \"gpg_key_id\"</li>\n      \t<li> string \"gpg_key_fp\"</li>\n          <li> dateTime.iso8601 \"yumrepo_last_sync\" - (optional) </li>\n      \t<li> string \"end_of_life\"</li>\n      \t<li> string \"parent_channel_label\"</li>\n      \t<li> string \"clone_original\"</li>\n      array:\n  <ul>\n   <li>\n          \t     struct - contentSources\n\t<ul>\n              \t<li> int \"id\"</li>\n              \t<li> string \"label\"</li>\n              \t<li> string \"sourceUrl\"</li>\n              \t<li> string \"type\"</li>\n          \t</ul>\n      </li></ul>\n  \t</ul>\n  \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getSystemCurrencyMultipliers\" href=\"#top\">Method: getSystemCurrencyMultipliers</a></h3>\nDescription:<br />\nGet the System Currency score multipliers\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nMap of score multipliers \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getSystemCurrencyScores\" href=\"#top\">Method: getSystemCurrencyScores</a></h3>\nDescription:<br />\nGet the System Currency scores for all servers the user has access to\n");
      out.write("<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \t     struct - system currency\n\t<ul>\n              \t<li> int \"sid\"</li>\n              \t<li> int \"critical security errata count\"</li>\n              \t<li> int \"important security errata count\"</li>\n              \t<li> int \"moderate security errata count\"</li>\n              \t<li> int \"low security errata count\"</li>\n              \t<li> int \"bug fix errata count\"</li>\n              \t<li> int \"enhancement errata count\"</li>\n              \t<li> int \"system currency score\"</li>\n          \t</ul>\n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getUnscheduledErrata\" href=\"#top\">Method: getUnscheduledErrata</a></h3>\nDescription:<br />\nProvides an array of errata that are applicable to a given system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n");
      out.write("\n\t     struct - errata\n\t<ul>\n              <li> int \"id\" - Errata Id </li>\n              <li> string \"date\" - Date erratum was created. </li>\n              <li> string \"advisory_type\" - Type of the advisory. </li>\n              <li> string \"advisory_name\" - Name of the advisory. </li>\n              <li> string \"advisory_synopsis\" - Summary of the erratum. </li>\n     \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getUuid\" href=\"#top\">Method: getUuid</a></h3>\nDescription:<br />\nGet the UUID from the given system ID.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nstring \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getVariables\" href=\"#top\">Method: getVariables</a></h3>\nDescription:<br />\nLists kickstart variables set  in the system record\n  for the specified server.\n  Note: This call assumes that a system record exists in cobbler for the\n  given system and will raise an XMLRPC fault if that is not the case.\n");
      out.write("  To create a system record over xmlrpc use system.createSystemRecord\n\n  To create a system record in the Web UI  please go to\n  System -&gt; &lt;Specified System&gt; -&gt; Provisioning -&gt;\n  Select a Kickstart profile -&gt; Create Cobbler System Record.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\t     struct - System kickstart variables\n\t<ul>\n              <li> boolean \"netboot\" - netboot enabled </li>\n              <li>array \"kickstart variables\"\n        <ul>\n            <li>\n              \t     struct - kickstart variable\n\t<ul>\n                  \t<li> string \"key\"</li>\n                  \t<li> string or int \"value\"</li>\n              \t</ul>\n                     </li>\n        </ul>\n    </li>\n      \t</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"isNvreInstalled\" href=\"#top\">Method: isNvreInstalled</a></h3>\nDescription:<br />\nCheck if the package with the given NVRE is installed on given system.\n<p />\n\n\n\n\nParameters:<br />\n");
      out.write("<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string name - Package name.\n </li>\n<li>\n\n    string version - Package version.\n </li>\n<li>\n\n    string release - Package release.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n1 if package exists, 0 if not, exception is thrown\n if an error occurs \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"isNvreInstalled\" href=\"#top\">Method: isNvreInstalled</a></h3>\nDescription:<br />\nIs the package with the given NVRE installed on given system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string name - Package name.\n </li>\n<li>\n\n    string version - Package version.\n </li>\n<li>\n\n    string release - Package release.\n </li>\n<li>\n\n    string epoch - Package epoch.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n1 if package exists, 0 if not, exception is thrown\n if an error occurs \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listActivationKeys\" href=\"#top\">Method: listActivationKeys</a></h3>\n");
      out.write("Description:<br />\nList the activation keys the system was registered with.  An empty\n list will be returned if an activation key was not used during registration.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>string - key</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listActiveSystems\" href=\"#top\">Method: listActiveSystems</a></h3>\nDescription:<br />\nReturns a list of active servers visible to the user.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n \t</ul>\n");
      out.write(" \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listActiveSystemsDetails\" href=\"#top\">Method: listActiveSystemsDetails</a></h3>\nDescription:<br />\nGiven a list of server ids, returns a list of active servers'\n details visible to the user.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverIds</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n     \t     struct - server details\n\t<ul>\n           <li> int \"id\" - The server's id </li>\n           <li> string \"name\" - The server's name </li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server successfully checked in (in UTC) </li>\n           <li> int \"ram\" - The amount of physical memory in MB. </li>\n           <li> int \"swap\" - The amount of swap space in MB. </li>\n           <li> struct \"network_devices\" - The server's network devices </li>\n       \n\n\t     struct - network device\n\t<ul>\n              <li> string \"ip\" - IP address assigned to this network device </li>\n");
      out.write("              <li> string \"interface\" - Network interface assigned to device e.g.\n                              eth0 </li>\n              <li> string \"netmask\" - Network mask assigned to device </li>\n              <li> string \"hardware_address\" - Hardware Address of device. </li>\n              <li> string \"module\" - Network driver used for this device. </li>\n              <li> string \"broadcast\" -  Broadcast address for device. </li>\n              <li> array \"ipv6\" - List of IPv6 addresses </li>\n            array:\n  <ul>\n   <li>\n               \t     struct - ipv6 address\n\t<ul>\n                     <li> string \"address\" - IPv6 address of this network device </li>\n                     <li> string \"netmask\" - IPv6 netmask of this network device </li>\n                     <li> string \"scope\" - IPv6 address scope </li>\n               \t</ul>\n            </li></ul>\n      \t</ul>\n \n           <li> struct \"dmi_info\" - The server's dmi info </li>\n       \n\n\t     struct - DMI\n\t<ul>\n          \t<li> string \"vendor\"</li>\n          \t<li> string \"system\"</li>\n");
      out.write("          \t<li> string \"product\"</li>\n          \t<li> string \"asset\"</li>\n          \t<li> string \"board\"</li>\n              <li> string \"bios_release\" - (optional) </li>\n              <li> string \"bios_vendor\" - (optional) </li>\n              <li> string \"bios_version\" - (optional) </li>\n      \t</ul>\n \n           <li> struct \"cpu_info\" - The server's cpu info </li>\n       \n\n\t     struct - CPU\n\t<ul>\n      \t<li> string \"cache\"</li>\n      \t<li> string \"family\"</li>\n      \t<li> string \"mhz\"</li>\n      \t<li> string \"flags\"</li>\n      \t<li> string \"model\"</li>\n      \t<li> string \"vendor\"</li>\n      \t<li> string \"arch\"</li>\n      \t<li> string \"stepping\"</li>\n      \t<li> string \"count\"</li>\n      \t<li> int \"socket_count (if available)\"</li>\n  \t</ul>\n \n           <li> array \"subscribed_channels\" - List of subscribed channels </li>\n         array:\n  <ul>\n   <li>\n           \t     struct - channel\n\t<ul>\n                 <li> int \"channel_id\" - The channel id. </li>\n                 <li> string \"channel_label\" - The channel label. </li>\n");
      out.write("           \t</ul>\n         </li></ul>\n           <li> array \"active_guest_system_ids\" - List of virtual guest system ids for active guests </li>\n         array:\n  <ul>\n   <li>\n               <li> int \"guest_id\" - The guest's system id. </li>\n         </li></ul>\n     \t</ul>\n   </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listAdministrators\" href=\"#top\">Method: listAdministrators</a></h3>\nDescription:<br />\nReturns a list of users which can administer the system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n              \n\n\t     struct - user\n\t<ul>\n              \t<li> int \"id\"</li>\n              \t<li> string \"login\"</li>\n                  <li> string \"login_uc\" - upper case version of the login </li>\n                  <li> boolean \"enabled\" - true if user is enabled,\n                         false if the user is disabled </li>\n      \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n");
      out.write("\n<h3> <a name=\"listAllInstallablePackages\" href=\"#top\">Method: listAllInstallablePackages</a></h3>\nDescription:<br />\nGet the list of all installable packages for a given system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\t     struct - package\n\t<ul>\n          \t<li> string \"name\"</li>\n          \t<li> string \"version\"</li>\n          \t<li> string \"release\"</li>\n          \t<li> string \"epoch\"</li>\n          \t<li> int \"id\"</li>\n          \t<li> string \"arch_label\"</li>\n      \t</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3 class=\"deprecated\"><a name=\"listBaseChannels\" href=\"#top\">Method: listBaseChannels</a></h3>\nDescription:<br />\nReturns a list of subscribable base channels.\n<p />\n\n\nDeprecated - being replaced by listSubscribableBaseChannels(string sessionKey,\n int serverId) <p />\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n");
      out.write("      \t     struct - channel\n\t<ul>\n              <li> int \"id\" - Base Channel ID. </li>\n              <li> string \"name\" - Name of channel. </li>\n              <li> string \"label\" - Label of Channel </li>\n              <li> int \"current_base\" - 1 indicates it is the current base\n                                      channel </li>\n      \t</ul>\n  </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3 class=\"deprecated\"><a name=\"listChildChannels\" href=\"#top\">Method: listChildChannels</a></h3>\nDescription:<br />\nReturns a list of subscribable child channels.  This only shows channels\n the system is *not* currently subscribed to.\n<p />\n\n\nDeprecated - being replaced by listSubscribableChildChannels(string sessionKey,\n int serverId) <p />\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \t     struct - child channel\n\t<ul>\n              \t<li> int \"id\"</li>\n              \t<li> string \"name\"</li>\n              \t<li> string \"label\"</li>\n");
      out.write("              \t<li> string \"summary\"</li>\n              \t<li> string \"has_license\"</li>\n              \t<li> string \"gpg_key_url\"</li>\n          \t</ul>\n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listDuplicatesByHostname\" href=\"#top\">Method: listDuplicatesByHostname</a></h3>\nDescription:<br />\nList duplicate systems by Hostname.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n           \t     struct - Duplicate Group\n\t<ul>\n                   \t<li> string \"hostname\"</li>\n                       <li>array \"systems\"\n        <ul>\n            <li>\n                      \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"systemId\"</li>\n      \t<li> string \"systemName\"</li>\n          <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n \t</ul>\n \n                              </li>\n        </ul>\n    </li>\n           \t</ul>\n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listDuplicatesByIp\" href=\"#top\">Method: listDuplicatesByIp</a></h3>\n");
      out.write("Description:<br />\nList duplicate systems by IP Address.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n           \t     struct - Duplicate Group\n\t<ul>\n                   \t<li> string \"ip\"</li>\n                       <li>array \"systems\"\n        <ul>\n            <li>\n                      \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"systemId\"</li>\n      \t<li> string \"systemName\"</li>\n          <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n \t</ul>\n \n                              </li>\n        </ul>\n    </li>\n           \t</ul>\n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listDuplicatesByMac\" href=\"#top\">Method: listDuplicatesByMac</a></h3>\nDescription:<br />\nList duplicate systems by Mac Address.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n           \t     struct - Duplicate Group\n");
      out.write("\t<ul>\n                   \t<li> string \"mac\"</li>\n                       <li>array \"systems\"\n        <ul>\n            <li>\n                      \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"systemId\"</li>\n      \t<li> string \"systemName\"</li>\n          <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n \t</ul>\n \n                              </li>\n        </ul>\n    </li>\n           \t</ul>\n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listExtraPackages\" href=\"#top\">Method: listExtraPackages</a></h3>\nDescription:<br />\nList extra packages for a system\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \t     struct - package\n\t<ul>\n                 \t<li> string \"name\"</li>\n                 \t<li> string \"version\"</li>\n                 \t<li> string \"release\"</li>\n                     <li> string \"epoch\" - returned only if non-zero </li>\n");
      out.write("                 \t<li> string \"arch\"</li>\n                     <li> date \"installtime\" - returned only if known </li>\n          \t</ul>\n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listGroups\" href=\"#top\">Method: listGroups</a></h3>\nDescription:<br />\nList the available groups for a given system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n      \t     struct - system group\n\t<ul>\n              <li> int \"id\" - server group id </li>\n              <li> int \"subscribed\" - 1 if the given server is subscribed\n               to this server group, 0 otherwise </li>\n              <li> string \"system_group_name\" - Name of the server group </li>\n              <li> string \"sgid\" - server group id (Deprecated) </li>\n      \t</ul>\n  </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listInactiveSystems\" href=\"#top\">Method: listInactiveSystems</a></h3>\nDescription:<br />\nLists systems that have been inactive for the default period of\n");
      out.write("          inactivity\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listInactiveSystems\" href=\"#top\">Method: listInactiveSystems</a></h3>\nDescription:<br />\nLists systems that have been inactive for the specified\n      number of days..\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int days\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n");
      out.write("              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listLatestAvailablePackage\" href=\"#top\">Method: listLatestAvailablePackage</a></h3>\nDescription:<br />\nGet the latest available version of a package for each system\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\n    string packageName\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n         \t     struct - system\n\t<ul>\n                 <li> int \"id\" - server ID </li>\n                 <li> string \"name\" - server name </li>\n                 <li> struct \"package\" - package structure </li>\n                 \t     struct - package\n\t<ul>\n                     \t<li> int \"id\"</li>\n                     \t<li> string \"name\"</li>\n                     \t<li> string \"version\"</li>\n");
      out.write("                     \t<li> string \"release\"</li>\n                     \t<li> string \"epoch\"</li>\n                     \t<li> string \"arch\"</li>\n                \t</ul>\n        \t</ul>\n    </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listLatestInstallablePackages\" href=\"#top\">Method: listLatestInstallablePackages</a></h3>\nDescription:<br />\nGet the list of latest installable packages for a given system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n      \t     struct - package\n\t<ul>\n          \t<li> string \"name\"</li>\n          \t<li> string \"version\"</li>\n          \t<li> string \"release\"</li>\n          \t<li> string \"epoch\"</li>\n          \t<li> int \"id\"</li>\n          \t<li> string \"arch_label\"</li>\n      \t</ul>\n </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listLatestUpgradablePackages\" href=\"#top\">Method: listLatestUpgradablePackages</a></h3>\nDescription:<br />\nGet the list of latest upgradable packages for a given system.\n");
      out.write("<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n      \t     struct - package\n\t<ul>\n          \t<li> string \"name\"</li>\n          \t<li> string \"arch\"</li>\n          \t<li> string \"from_version\"</li>\n          \t<li> string \"from_release\"</li>\n          \t<li> string \"from_epoch\"</li>\n          \t<li> string \"to_version\"</li>\n          \t<li> string \"to_release\"</li>\n          \t<li> string \"to_epoch\"</li>\n          \t<li> string \"to_package_id\"</li>\n      \t</ul>\n </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listNewerInstalledPackages\" href=\"#top\">Method: listNewerInstalledPackages</a></h3>\nDescription:<br />\nGiven a package name, version, release, and epoch, returns the\n list of packages installed on the system w/ the same name that are newer.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string name - Package name.\n </li>\n<li>\n\n    string version - Package version.\n");
      out.write(" </li>\n<li>\n\n    string release - Package release.\n </li>\n<li>\n\n    string epoch - Package epoch.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \t     struct - package\n\t<ul>\n              \t<li> string \"name\"</li>\n              \t<li> string \"version\"</li>\n              \t<li> string \"release\"</li>\n              \t<li> string \"epoch\"</li>\n          \t</ul>\n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listNotes\" href=\"#top\">Method: listNotes</a></h3>\nDescription:<br />\nProvides a list of notes associated with a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n      \n\n\t     struct - note details\n\t<ul>\n   \t<li> int \"id\"</li>\n       <li> string \"subject\" - Subject of the note </li>\n       <li> string \"note\" - Contents of the note </li>\n       <li> int \"system_id\" - The id of the system associated with the note </li>\n       <li> string \"creator\" - Creator of the note if exists (optional) </li>\n");
      out.write("       <li> date \"updated\" - Date of the last note update </li>\n \t</ul>\n \n  </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listOlderInstalledPackages\" href=\"#top\">Method: listOlderInstalledPackages</a></h3>\nDescription:<br />\nGiven a package name, version, release, and epoch, returns\n the list of packages installed on the system with the same name that are\n older.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string name - Package name.\n </li>\n<li>\n\n    string version - Package version.\n </li>\n<li>\n\n    string release - Package release.\n </li>\n<li>\n\n    string epoch - Package epoch.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \t     struct - package\n\t<ul>\n              \t<li> string \"name\"</li>\n              \t<li> string \"version\"</li>\n              \t<li> string \"release\"</li>\n              \t<li> string \"epoch\"</li>\n          \t</ul>\n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listOutOfDateSystems\" href=\"#top\">Method: listOutOfDateSystems</a></h3>\n");
      out.write("Description:<br />\nReturns list of systems needing package updates.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n              \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n \t</ul>\n \n          </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listPackageProfiles\" href=\"#top\">Method: listPackageProfiles</a></h3>\nDescription:<br />\nList the package profiles in this organization\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n      \n\n\t     struct - package profile\n\t<ul>\n   \t<li> int \"id\"</li>\n   \t<li> string \"name\"</li>\n   \t<li> string \"channel\"</li>\n");
      out.write(" \t</ul>\n \n  </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listPackages\" href=\"#top\">Method: listPackages</a></h3>\nDescription:<br />\nList the installed packages for a given system. The attribute\n installtime is returned since API version 10.10.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \t     struct - package\n\t<ul>\n                 \t<li> string \"name\"</li>\n                 \t<li> string \"version\"</li>\n                 \t<li> string \"release\"</li>\n                 \t<li> string \"epoch\"</li>\n                 \t<li> string \"arch\"</li>\n                     <li> date \"installtime\" - returned only if known </li>\n          \t</ul>\n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listPackagesFromChannel\" href=\"#top\">Method: listPackagesFromChannel</a></h3>\nDescription:<br />\nProvides a list of packages installed on a system that are also\n          contained in the given channel.  The installed package list did not\n");
      out.write("          include arch information before RHEL 5, so it is arch unaware.  RHEL 5\n          systems do upload the arch information, and thus are arch aware.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string channelLabel\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n      \n\n\t     struct - package\n\t<ul>\n      \t<li> string \"name\"</li>\n      \t<li> string \"version\"</li>\n      \t<li> string \"release\"</li>\n      \t<li> string \"epoch\"</li>\n      \t<li> int \"id\"</li>\n      \t<li> string \"arch_label\"</li>\n          <li> string \"path\" - The path on that file system that the package\n             resides </li>\n          <li> string \"provider\" - The provider of the package, determined by\n              the gpg key it was signed with. </li>\n      \t<li> dateTime.iso8601 \"last_modified\"</li>\n  \t</ul>\n \n  </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listPhysicalSystems\" href=\"#top\">Method: listPhysicalSystems</a></h3>\nDescription:<br />\n");
      out.write("Returns a list of all Physical servers visible to the user.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listSubscribableBaseChannels\" href=\"#top\">Method: listSubscribableBaseChannels</a></h3>\nDescription:<br />\nReturns a list of subscribable base channels.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n      \t     struct - channel\n\t<ul>\n              <li> int \"id\" - Base Channel ID. </li>\n              <li> string \"name\" - Name of channel. </li>\n");
      out.write("              <li> string \"label\" - Label of Channel </li>\n              <li> int \"current_base\" - 1 indicates it is the current base\n                                      channel </li>\n      \t</ul>\n  </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listSubscribableChildChannels\" href=\"#top\">Method: listSubscribableChildChannels</a></h3>\nDescription:<br />\nReturns a list of subscribable child channels.  This only shows channels\n the system is *not* currently subscribed to.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \t     struct - child channel\n\t<ul>\n              \t<li> int \"id\"</li>\n              \t<li> string \"name\"</li>\n              \t<li> string \"label\"</li>\n              \t<li> string \"summary\"</li>\n              \t<li> string \"has_license\"</li>\n              \t<li> string \"gpg_key_url\"</li>\n          \t</ul>\n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listSubscribedChildChannels\" href=\"#top\">Method: listSubscribedChildChannels</a></h3>\n");
      out.write("Description:<br />\nReturns a list of subscribed child channels.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n\n\t     struct - channel\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n      \t<li> string \"label\"</li>\n      \t<li> string \"arch_name\"</li>\n      \t<li> string \"arch_label\"</li>\n      \t<li> string \"summary\"</li>\n      \t<li> string \"description\"</li>\n      \t<li> string \"checksum_label\"</li>\n      \t<li> dateTime.iso8601 \"last_modified\"</li>\n      \t<li> string \"maintainer_name\"</li>\n      \t<li> string \"maintainer_email\"</li>\n      \t<li> string \"maintainer_phone\"</li>\n      \t<li> string \"support_policy\"</li>\n      \t<li> string \"gpg_key_url\"</li>\n      \t<li> string \"gpg_key_id\"</li>\n      \t<li> string \"gpg_key_fp\"</li>\n          <li> dateTime.iso8601 \"yumrepo_last_sync\" - (optional) </li>\n      \t<li> string \"end_of_life\"</li>\n      \t<li> string \"parent_channel_label\"</li>\n");
      out.write("      \t<li> string \"clone_original\"</li>\n      array:\n  <ul>\n   <li>\n          \t     struct - contentSources\n\t<ul>\n              \t<li> int \"id\"</li>\n              \t<li> string \"label\"</li>\n              \t<li> string \"sourceUrl\"</li>\n              \t<li> string \"type\"</li>\n          \t</ul>\n      </li></ul>\n  \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listSuggestedReboot\" href=\"#top\">Method: listSuggestedReboot</a></h3>\nDescription:<br />\nList systems that require reboot.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \t     struct - system\n\t<ul>\n              \t<li> int \"id\"</li>\n              \t<li> string \"name\"</li>\n          \t</ul>\n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listSystemEvents\" href=\"#top\">Method: listSystemEvents</a></h3>\nDescription:<br />\nList system actions of the specified type that were *scheduled* against the given server.\n \"actionType\" should be exactly the string returned in the action_type field\n");
      out.write(" from the listSystemEvents(sessionKey, serverId) method. For example,\n 'Package Install' or 'Initiate a kickstart for a virtual guest.'\n Note: see also system.getEventHistory method which returns a history of all events.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId - ID of system.\n </li>\n<li>\n\n    string actionType - Type of the action.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n      \t     struct - action\n\t<ul>\n              <li> int \"failed_count\" - Number of times action failed. </li>\n              <li> string \"modified\" - Date modified. (Deprecated by\n                     modified_date) </li>\n              <li> dateTime.iso8601 \"modified_date\" - Date modified. </li>\n              <li> string \"created\" - Date created. (Deprecated by\n                     created_date) </li>\n              <li> dateTime.iso8601 \"created_date\" - Date created. </li>\n          \t<li> string \"action_type\"</li>\n              <li> int \"successful_count\" - Number of times action was successful. </li>\n");
      out.write("              <li> string \"earliest_action\" - Earliest date this action\n                     will occur. </li>\n              <li> int \"archived\" - If this action is archived. (1 or 0) </li>\n              <li> string \"scheduler_user\" - available only if concrete user\n                     has scheduled the action </li>\n              <li> string \"prerequisite\" - Pre-requisite action. (optional) </li>\n              <li> string \"name\" - Name of this action. </li>\n              <li> int \"id\" - Id of this action. </li>\n              <li> string \"version\" - Version of action. </li>\n              <li> string \"completion_time\" - The date/time the event was\n                     completed. Format -&gt;YYYY-MM-dd hh:mm:ss.ms\n                     Eg -&gt;2007-06-04 13:58:13.0. (optional)\n                     (Deprecated by completed_date) </li>\n              <li> dateTime.iso8601 \"completed_date\" - The date/time the event was completed.\n                     (optional) </li>\n              <li> string \"pickup_time\" - The date/time the action was picked\n");
      out.write("                     up. Format -&gt;YYYY-MM-dd hh:mm:ss.ms\n                     Eg -&gt;2007-06-04 13:58:13.0. (optional)\n                     (Deprecated by pickup_date) </li>\n              <li> dateTime.iso8601 \"pickup_date\" - The date/time the action was picked up.\n                     (optional) </li>\n              <li> string \"result_msg\" - The result string after the action\n                     executes at the client machine. (optional) </li>\n              <li>array \"additional_info\" - This array contains additional\n              information for the event, if available.\n        <ul>\n            <li>\n              \t     struct - info\n\t<ul>\n                      <li> string \"detail\" - The detail provided depends on the\n                  specific event.  For example, for a package event, this will be the\n                  package name, for an errata event, this will be the advisory name\n                  and synopsis, for a config file event, this will be path and\n                  optional revision information...etc. </li>\n");
      out.write("                      <li> string \"result\" - The result (if included) depends\n                  on the specific event.  For example, for a package or errata event,\n                  no result is included, for a config file event, the result might\n                  include an error (if one occurred, such as the file was missing)\n                  or in the case of a config file comparison it might include the\n                  differenes found. </li>\n              \t</ul>\n                     </li>\n        </ul>\n    </li>\n      \t</ul>\n  </li></ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 10.8 <p />\n<hr />\n\n<h3> <a name=\"listSystemEvents\" href=\"#top\">Method: listSystemEvents</a></h3>\nDescription:<br />\nList all system actions that were *scheduled* against the given server.\n This may require the caller to filter the result to fetch actions with a specific action type or\n to use the overloaded system.listSystemEvents method with actionType as a parameter.\n Note: see also system.getEventHistory method which returns a history of all events.\n");
      out.write("<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId - ID of system.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n      \t     struct - action\n\t<ul>\n              <li> int \"failed_count\" - Number of times action failed. </li>\n              <li> string \"modified\" - Date modified. (Deprecated by\n                     modified_date) </li>\n              <li> dateTime.iso8601 \"modified_date\" - Date modified. </li>\n              <li> string \"created\" - Date created. (Deprecated by\n                     created_date) </li>\n              <li> dateTime.iso8601 \"created_date\" - Date created. </li>\n          \t<li> string \"action_type\"</li>\n              <li> int \"successful_count\" - Number of times action was successful. </li>\n              <li> string \"earliest_action\" - Earliest date this action\n                     will occur. </li>\n              <li> int \"archived\" - If this action is archived. (1 or 0) </li>\n              <li> string \"scheduler_user\" - available only if concrete user\n");
      out.write("                     has scheduled the action </li>\n              <li> string \"prerequisite\" - Pre-requisite action. (optional) </li>\n              <li> string \"name\" - Name of this action. </li>\n              <li> int \"id\" - Id of this action. </li>\n              <li> string \"version\" - Version of action. </li>\n              <li> string \"completion_time\" - The date/time the event was\n                     completed. Format -&gt;YYYY-MM-dd hh:mm:ss.ms\n                     Eg -&gt;2007-06-04 13:58:13.0. (optional)\n                     (Deprecated by completed_date) </li>\n              <li> dateTime.iso8601 \"completed_date\" - The date/time the event was completed.\n                     (optional) </li>\n              <li> string \"pickup_time\" - The date/time the action was picked\n                     up. Format -&gt;YYYY-MM-dd hh:mm:ss.ms\n                     Eg -&gt;2007-06-04 13:58:13.0. (optional)\n                     (Deprecated by pickup_date) </li>\n              <li> dateTime.iso8601 \"pickup_date\" - The date/time the action was picked up.\n");
      out.write("                     (optional) </li>\n              <li> string \"result_msg\" - The result string after the action\n                     executes at the client machine. (optional) </li>\n              <li>array \"additional_info\" - This array contains additional\n              information for the event, if available.\n        <ul>\n            <li>\n              \t     struct - info\n\t<ul>\n                      <li> string \"detail\" - The detail provided depends on the\n                  specific event.  For example, for a package event, this will be the\n                  package name, for an errata event, this will be the advisory name\n                  and synopsis, for a config file event, this will be path and\n                  optional revision information...etc. </li>\n                      <li> string \"result\" - The result (if included) depends\n                  on the specific event.  For example, for a package or errata event,\n                  no result is included, for a config file event, the result might\n                  include an error (if one occurred, such as the file was missing)\n");
      out.write("                  or in the case of a config file comparison it might include the\n                  differenes found. </li>\n              \t</ul>\n                     </li>\n        </ul>\n    </li>\n      \t</ul>\n  </li></ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 10.8 <p />\n<hr />\n\n<h3> <a name=\"listSystems\" href=\"#top\">Method: listSystems</a></h3>\nDescription:<br />\nReturns a list of all servers visible to the user.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listSystemsWithExtraPackages\" href=\"#top\">Method: listSystemsWithExtraPackages</a></h3>\n");
      out.write("Description:<br />\nList systems with extra packages\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n         \t     struct - system\n\t<ul>\n                 <li> int \"id\" - System ID </li>\n                 <li> string \"name\" - System profile name </li>\n                 <li> int \"extra_pkg_count\" - Extra packages count </li>\n         \t</ul>\n     </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listSystemsWithPackage\" href=\"#top\">Method: listSystemsWithPackage</a></h3>\nDescription:<br />\nLists the systems that have the given installed package\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int pid - the package id\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n              \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n");
      out.write("           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n \t</ul>\n \n           </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listSystemsWithPackage\" href=\"#top\">Method: listSystemsWithPackage</a></h3>\nDescription:<br />\nLists the systems that have the given installed package\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string name - the package name\n </li>\n<li>\n\n    string version - the package version\n </li>\n<li>\n\n    string release - the package release\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n                  \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n \t</ul>\n \n              </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n");
      out.write("\n<h3> <a name=\"listUngroupedSystems\" href=\"#top\">Method: listUngroupedSystems</a></h3>\nDescription:<br />\nList systems that are not associated with any system groups.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listUserSystems\" href=\"#top\">Method: listUserSystems</a></h3>\nDescription:<br />\nList systems for a given user.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string login - User's login name.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n              \n");
      out.write("\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n \t</ul>\n \n          </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listUserSystems\" href=\"#top\">Method: listUserSystems</a></h3>\nDescription:<br />\nList systems for the logged in user.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n              \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n");
      out.write("\n \t</ul>\n \n          </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listVirtualGuests\" href=\"#top\">Method: listVirtualGuests</a></h3>\nDescription:<br />\nLists the virtual guests for a given virtual host\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int sid - the virtual host's id\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n          \n\n\t     struct - virtual system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n          <li> string \"guest_name\" - The virtual guest name as provided\n                  by the virtual host </li>\n          <li> dateTime.iso8601 \"last_checkin\" - Last time server successfully\n                   checked in. </li>\n      \t<li> string \"uuid\"</li>\n   \t</ul>\n \n     </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listVirtualHosts\" href=\"#top\">Method: listVirtualHosts</a></h3>\nDescription:<br />\nLists the virtual hosts visible to the user\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n");
      out.write(" </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n       \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n \t</ul>\n \n      </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"obtainReactivationKey\" href=\"#top\">Method: obtainReactivationKey</a></h3>\nDescription:<br />\nObtains a reactivation key for this server.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nstring \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"obtainReactivationKey\" href=\"#top\">Method: obtainReactivationKey</a></h3>\nDescription:<br />\nObtains a reactivation key for this server.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string systemid - systemid file\n");
      out.write(" </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nstring \n \n</li></ul>\n</code>\n<p />\nAvailable since: 10.10 <p />\n<hr />\n\n<h3> <a name=\"provisionSystem\" href=\"#top\">Method: provisionSystem</a></h3>\nDescription:<br />\nProvision a system using the specified kickstart profile.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId - ID of the system to be provisioned.\n </li>\n<li>\n\n    string profileName - Kickstart profile to use.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint - ID of the action scheduled, otherwise exception thrown\n on error \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"provisionSystem\" href=\"#top\">Method: provisionSystem</a></h3>\nDescription:<br />\nProvision a system using the specified kickstart profile.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId - ID of the system to be provisioned.\n </li>\n<li>\n\n    string profileName - Kickstart profile to use.\n </li>\n<li>\n\n    dateTime.iso8601 earliestDate\n </li>\n</ul>\n<p />\n");
      out.write("Returns:\n<code><ul><li>\n\n\nint - ID of the action scheduled, otherwise exception thrown\n on error \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"provisionVirtualGuest\" href=\"#top\">Method: provisionVirtualGuest</a></h3>\nDescription:<br />\nProvision a guest on the host specified.  Defaults to:\n memory=512MB, vcpu=1, storage=3GB, mac_address=random.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId - ID of host to provision guest on.\n </li>\n<li>\n\n    string guestName\n </li>\n<li>\n\n    string profileName - Kickstart profile to use.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"provisionVirtualGuest\" href=\"#top\">Method: provisionVirtualGuest</a></h3>\nDescription:<br />\nProvision a guest on the host specified.  This schedules the guest\n for creation and will begin the provisioning process when the host checks in\n or if OSAD is enabled will begin immediately. Defaults to mac_address=random.\n");
      out.write("<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId - ID of host to provision guest on.\n </li>\n<li>\n\n    string guestName\n </li>\n<li>\n\n    string profileName - Kickstart Profile to use.\n </li>\n<li>\n\n    int memoryMb - Memory to allocate to the guest\n </li>\n<li>\n\n    int vcpus - Number of virtual CPUs to allocate to\n                                          the guest.\n </li>\n<li>\n\n    int storageGb - Size of the guests disk image.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"provisionVirtualGuest\" href=\"#top\">Method: provisionVirtualGuest</a></h3>\nDescription:<br />\nProvision a guest on the host specified.  This schedules the guest\n for creation and will begin the provisioning process when the host checks in\n or if OSAD is enabled will begin immediately.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId - ID of host to provision guest on.\n");
      out.write(" </li>\n<li>\n\n    string guestName\n </li>\n<li>\n\n    string profileName - Kickstart Profile to use.\n </li>\n<li>\n\n    int memoryMb - Memory to allocate to the guest\n </li>\n<li>\n\n    int vcpus - Number of virtual CPUs to allocate to\n                                          the guest.\n </li>\n<li>\n\n    int storageGb - Size of the guests disk image.\n </li>\n<li>\n\n    string macAddress - macAddress to give the guest's\n                                          virtual networking hardware.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"removeEntitlements\" href=\"#top\">Method: removeEntitlements</a></h3>\nDescription:<br />\nRemove addon entitlements from a server. Entitlements a server does\n not have are quietly ignored.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n<ul>\n    <li>string - entitlement_label</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n");
      out.write(" \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"scheduleApplyErrata\" href=\"#top\">Method: scheduleApplyErrata</a></h3>\nDescription:<br />\nSchedules an action to apply errata updates to multiple systems.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - errataId</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 13.0 <p />\n<hr />\n\n<h3> <a name=\"scheduleApplyErrata\" href=\"#top\">Method: scheduleApplyErrata</a></h3>\nDescription:<br />\nSchedules an action to apply errata updates to multiple systems.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - errataId</li>\n</ul>\n </li>\n<li>\n\n    boolean allowModules - Allow this API call, despite modular content being present\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n");
      out.write("\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 21 <p />\n<hr />\n\n<h3> <a name=\"scheduleApplyErrata\" href=\"#top\">Method: scheduleApplyErrata</a></h3>\nDescription:<br />\nSchedules an action to apply errata updates to multiple systems at a\n given date/time.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - errataId</li>\n</ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 13.0 <p />\n<hr />\n\n<h3> <a name=\"scheduleApplyErrata\" href=\"#top\">Method: scheduleApplyErrata</a></h3>\nDescription:<br />\nSchedules an action to apply errata updates to multiple systems at a\n given date/time.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - errataId</li>\n");
      out.write("</ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n<li>\n\n    boolean allowModules - Allow this API call, despite modular content being present\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 21 <p />\n<hr />\n\n<h3> <a name=\"scheduleApplyErrata\" href=\"#top\">Method: scheduleApplyErrata</a></h3>\nDescription:<br />\nSchedules an action to apply errata updates to a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - errataId</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 13.0 <p />\n<hr />\n\n<h3> <a name=\"scheduleApplyErrata\" href=\"#top\">Method: scheduleApplyErrata</a></h3>\nDescription:<br />\nSchedules an action to apply errata updates to a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n");
      out.write("<li>\n\narray:\n<ul>\n    <li>int - errataId</li>\n</ul>\n </li>\n<li>\n\n    boolean allowModules - Allow this API call, despite modular content being present\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 21 <p />\n<hr />\n\n<h3> <a name=\"scheduleApplyErrata\" href=\"#top\">Method: scheduleApplyErrata</a></h3>\nDescription:<br />\nSchedules an action to apply errata updates to a system at a\n given date/time.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - errataId</li>\n</ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 13.0 <p />\n<hr />\n\n<h3> <a name=\"scheduleApplyErrata\" href=\"#top\">Method: scheduleApplyErrata</a></h3>\nDescription:<br />\nSchedules an action to apply errata updates to a system at a\n given date/time.\n<p />\n");
      out.write("\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - errataId</li>\n</ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n<li>\n\n    boolean allowModules - Allow this API call, despite modular content being present\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 21 <p />\n<hr />\n\n<h3> <a name=\"scheduleCertificateUpdate\" href=\"#top\">Method: scheduleCertificateUpdate</a></h3>\nDescription:<br />\nSchedule update of client certificate\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"scheduleCertificateUpdate\" href=\"#top\">Method: scheduleCertificateUpdate</a></h3>\nDescription:<br />\nSchedule update of client certificate at given date and time\n<p />\n\n\n\n\nParameters:<br />\n");
      out.write("<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    dateTime.iso860 date\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"scheduleGuestAction\" href=\"#top\">Method: scheduleGuestAction</a></h3>\nDescription:<br />\nSchedules a guest action for the specified virtual guest for a given\n          date/time.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n        string sessionKey\n </li>\n<li>\n\n    int sid - the system Id of the guest\n </li>\n<li>\n\n    string state - One of the following actions  'start',\n          'suspend', 'resume', 'restart', 'shutdown'.\n </li>\n<li>\n\n    dateTime.iso8601 date - the time/date to schedule the action\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"scheduleGuestAction\" href=\"#top\">Method: scheduleGuestAction</a></h3>\nDescription:<br />\nSchedules a guest action for the specified virtual guest for the\n");
      out.write("          current time.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n        string sessionKey\n </li>\n<li>\n\n    int sid - the system Id of the guest\n </li>\n<li>\n\n    string state - One of the following actions  'start',\n          'suspend', 'resume', 'restart', 'shutdown'.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"scheduleHardwareRefresh\" href=\"#top\">Method: scheduleHardwareRefresh</a></h3>\nDescription:<br />\nSchedule a hardware refresh for a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    dateTime.iso8601 earliestOccurrence\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\nAvailable since: 13.0 <p />\n<hr />\n\n<h3> <a name=\"schedulePackageInstall\" href=\"#top\">Method: schedulePackageInstall</a></h3>\nDescription:<br />\nSchedule package installation for several systems.\n<p />\n");
      out.write("\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - packageId</li>\n</ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"schedulePackageInstall\" href=\"#top\">Method: schedulePackageInstall</a></h3>\nDescription:<br />\nSchedule package installation for several systems.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - packageId</li>\n</ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n<li>\n\n    boolean allowModules - Allow this API call, despite modular content being present\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 21 <p />\n<hr />\n\n<h3> <a name=\"schedulePackageInstall\" href=\"#top\">Method: schedulePackageInstall</a></h3>\n");
      out.write("Description:<br />\nSchedule package installation for a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - packageId</li>\n</ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\nAvailable since: 13.0 <p />\n<hr />\n\n<h3> <a name=\"schedulePackageInstall\" href=\"#top\">Method: schedulePackageInstall</a></h3>\nDescription:<br />\nSchedule package installation for a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - packageId</li>\n</ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n<li>\n\n    boolean allowModules - Allow this API call, despite modular content being present\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\nAvailable since: 21 <p />\n");
      out.write("<hr />\n\n<h3> <a name=\"schedulePackageInstallByNevra\" href=\"#top\">Method: schedulePackageInstallByNevra</a></h3>\nDescription:<br />\nSchedule package installation for several systems.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\narray:\n  <ul>\n   <li>\n                   \t     struct - Package nevra\n\t<ul>\n                          \t<li> string \"package_name\"</li>\n                          \t<li> string \"package_epoch\"</li>\n                          \t<li> string \"package_version\"</li>\n                          \t<li> string \"package_release\"</li>\n                          \t<li> string \"package_arch\"</li>\n\n                   \t</ul>\n               </li></ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"schedulePackageInstallByNevra\" href=\"#top\">Method: schedulePackageInstallByNevra</a></h3>\n");
      out.write("Description:<br />\nSchedule package installation for several systems.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\narray:\n  <ul>\n   <li>\n                   \t     struct - Package nevra\n\t<ul>\n                          \t<li> string \"package_name\"</li>\n                          \t<li> string \"package_epoch\"</li>\n                          \t<li> string \"package_version\"</li>\n                          \t<li> string \"package_release\"</li>\n                          \t<li> string \"package_arch\"</li>\n\n                   \t</ul>\n               </li></ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n<li>\n\n    boolean allowModules - Allow this API call, despite modular content being present\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 21 <p />\n<hr />\n\n<h3> <a name=\"schedulePackageInstallByNevra\" href=\"#top\">Method: schedulePackageInstallByNevra</a></h3>\n");
      out.write("Description:<br />\nSchedule package installation for a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n  <ul>\n   <li>\n                   \t     struct - Package nevra\n\t<ul>\n                          \t<li> string \"package_name\"</li>\n                          \t<li> string \"package_epoch\"</li>\n                          \t<li> string \"package_version\"</li>\n                          \t<li> string \"package_release\"</li>\n                          \t<li> string \"package_arch\"</li>\n\n                   \t</ul>\n               </li></ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"schedulePackageInstallByNevra\" href=\"#top\">Method: schedulePackageInstallByNevra</a></h3>\nDescription:<br />\nSchedule package installation for a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n");
      out.write(" </li>\n<li>\n\narray:\n  <ul>\n   <li>\n                   \t     struct - Package nevra\n\t<ul>\n                          \t<li> string \"package_name\"</li>\n                          \t<li> string \"package_epoch\"</li>\n                          \t<li> string \"package_version\"</li>\n                          \t<li> string \"package_release\"</li>\n                          \t<li> string \"package_arch\"</li>\n\n                   \t</ul>\n               </li></ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n<li>\n\n    boolean allowModules - Allow this API call, despite modular content being present\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\nAvailable since: 21 <p />\n<hr />\n\n<h3> <a name=\"schedulePackageRefresh\" href=\"#top\">Method: schedulePackageRefresh</a></h3>\nDescription:<br />\nSchedule a package list refresh for a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    dateTime.iso8601 earliestOccurrence\n");
      out.write(" </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint - ID of the action scheduled, otherwise exception thrown\n on error \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"schedulePackageRemove\" href=\"#top\">Method: schedulePackageRemove</a></h3>\nDescription:<br />\nSchedule package removal for several systems.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - packageId</li>\n</ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"schedulePackageRemove\" href=\"#top\">Method: schedulePackageRemove</a></h3>\nDescription:<br />\nSchedule package removal for several systems.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - packageId</li>\n</ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n");
      out.write(" </li>\n<li>\n\n    boolean allowModules - Allow this API call, despite modular content being present\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 21 <p />\n<hr />\n\n<h3> <a name=\"schedulePackageRemove\" href=\"#top\">Method: schedulePackageRemove</a></h3>\nDescription:<br />\nSchedule package removal for a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - packageId</li>\n</ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"schedulePackageRemove\" href=\"#top\">Method: schedulePackageRemove</a></h3>\nDescription:<br />\nSchedule package removal for a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - packageId</li>\n</ul>\n");
      out.write(" </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n<li>\n\n    boolean allowModules - Allow this API call, despite modular content being present\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\nAvailable since: 21 <p />\n<hr />\n\n<h3> <a name=\"schedulePackageRemoveByNevra\" href=\"#top\">Method: schedulePackageRemoveByNevra</a></h3>\nDescription:<br />\nSchedule package removal for several systems.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\narray:\n  <ul>\n   <li>\n                   \t     struct - Package nevra\n\t<ul>\n                          \t<li> string \"package_name\"</li>\n                          \t<li> string \"package_epoch\"</li>\n                          \t<li> string \"package_version\"</li>\n                          \t<li> string \"package_release\"</li>\n                          \t<li> string \"package_arch\"</li>\n\n                   \t</ul>\n               </li></ul>\n");
      out.write(" </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"schedulePackageRemoveByNevra\" href=\"#top\">Method: schedulePackageRemoveByNevra</a></h3>\nDescription:<br />\nSchedule package removal for several systems.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverId</li>\n</ul>\n </li>\n<li>\n\narray:\n  <ul>\n   <li>\n                   \t     struct - Package nevra\n\t<ul>\n                          \t<li> string \"package_name\"</li>\n                          \t<li> string \"package_epoch\"</li>\n                          \t<li> string \"package_version\"</li>\n                          \t<li> string \"package_release\"</li>\n                          \t<li> string \"package_arch\"</li>\n\n                   \t</ul>\n               </li></ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n<li>\n\n    boolean allowModules - Allow this API call, despite modular content being present\n");
      out.write(" </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 21 <p />\n<hr />\n\n<h3> <a name=\"schedulePackageRemoveByNevra\" href=\"#top\">Method: schedulePackageRemoveByNevra</a></h3>\nDescription:<br />\nSchedule package removal for a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n  <ul>\n   <li>\n                   \t     struct - Package nevra\n\t<ul>\n                          \t<li> string \"package_name\"</li>\n                          \t<li> string \"package_epoch\"</li>\n                          \t<li> string \"package_version\"</li>\n                          \t<li> string \"package_release\"</li>\n                          \t<li> string \"package_arch\"</li>\n\n                   \t</ul>\n               </li></ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"schedulePackageRemoveByNevra\" href=\"#top\">Method: schedulePackageRemoveByNevra</a></h3>\n");
      out.write("Description:<br />\nSchedule package removal for a system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n  <ul>\n   <li>\n                   \t     struct - Package nevra\n\t<ul>\n                          \t<li> string \"package_name\"</li>\n                          \t<li> string \"package_epoch\"</li>\n                          \t<li> string \"package_version\"</li>\n                          \t<li> string \"package_release\"</li>\n                          \t<li> string \"package_arch\"</li>\n\n                   \t</ul>\n               </li></ul>\n </li>\n<li>\n\ndateTime.iso8601 earliestOccurrence \n </li>\n<li>\n\n    boolean allowModules - Allow this API call, despite modular content being present\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n<ul>\n    <li>int - actionId</li>\n</ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 21 <p />\n<hr />\n\n<h3> <a name=\"scheduleReboot\" href=\"#top\">Method: scheduleReboot</a></h3>\nDescription:<br />\nSchedule a reboot for a system.\n<p />\n");
      out.write("\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    dateTime.iso860 earliestOccurrence\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\nAvailable since: 13.0 <p />\n<hr />\n\n<h3> <a name=\"scheduleScriptRun\" href=\"#top\">Method: scheduleScriptRun</a></h3>\nDescription:<br />\nSchedule a script to run.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string label\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - System IDs of the servers to run the script on.</li>\n</ul>\n </li>\n<li>\n\n    string username - User to run script as.\n </li>\n<li>\n\n    string groupname - Group to run script as.\n </li>\n<li>\n\n    int timeout - Seconds to allow the script to run\nbefore timing out.\n </li>\n<li>\n\n    string script - Contents of the script to run.\n </li>\n<li>\n\n    dateTime.iso8601 earliestOccurrence - Earliest the script can run.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint - ID of the script run action created. Can be used to fetch\n");
      out.write(" results with system.getScriptResults. \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"scheduleScriptRun\" href=\"#top\">Method: scheduleScriptRun</a></h3>\nDescription:<br />\nSchedule a script to run.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - System IDs of the servers to run the script on.</li>\n</ul>\n </li>\n<li>\n\n    string username - User to run script as.\n </li>\n<li>\n\n    string groupname - Group to run script as.\n </li>\n<li>\n\n    int timeout - Seconds to allow the script to run\nbefore timing out.\n </li>\n<li>\n\n    string script - Contents of the script to run.\n </li>\n<li>\n\n    dateTime.iso8601 earliestOccurrence - Earliest the script can run.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint - ID of the script run action created. Can be used to fetch\n results with system.getScriptResults. \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"scheduleScriptRun\" href=\"#top\">Method: scheduleScriptRun</a></h3>\nDescription:<br />\nSchedule a script to run.\n<p />\n");
      out.write("\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId - ID of the server to run the script on.\n </li>\n<li>\n\n    string username - User to run script as.\n </li>\n<li>\n\n    string groupname - Group to run script as.\n </li>\n<li>\n\n    int timeout - Seconds to allow the script to run\nbefore timing out.\n </li>\n<li>\n\n    string script - Contents of the script to run.\n </li>\n<li>\n\n    dateTime.iso8601 earliestOccurrence - Earliest the script can run.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint - ID of the script run action created. Can be used to fetch\n results with system.getScriptResults. \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"scheduleScriptRun\" href=\"#top\">Method: scheduleScriptRun</a></h3>\nDescription:<br />\nSchedule a script to run.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string label\n </li>\n<li>\n\n    int serverId - ID of the server to run the script on.\n </li>\n<li>\n\n    string username - User to run script as.\n </li>\n<li>\n\n    string groupname - Group to run script as.\n");
      out.write(" </li>\n<li>\n\n    int timeout - Seconds to allow the script to run\nbefore timing out.\n </li>\n<li>\n\n    string script - Contents of the script to run.\n </li>\n<li>\n\n    dateTime.iso8601 earliestOccurrence - Earliest the script can run.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint - ID of the script run action created. Can be used to fetch\n results with system.getScriptResults. \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"scheduleSyncPackagesWithSystem\" href=\"#top\">Method: scheduleSyncPackagesWithSystem</a></h3>\nDescription:<br />\nSync packages from a source system to a target.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int targetServerId - Target system to apply package\n                  changes to.\n </li>\n<li>\n\n    int sourceServerId - Source system to retrieve\n                  package state from.\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - packageId - Package IDs to be synced.</li>\n</ul>\n </li>\n<li>\n\n    dateTime.iso8601 date - Date to schedule action for\n </li>\n</ul>\n<p />\n");
      out.write("Returns:\n<code><ul><li>\n\n\nint actionId - The action id of the scheduled action \n \n</li></ul>\n</code>\n<p />\nAvailable since: 13.0 <p />\n<hr />\n\n<h3> <a name=\"searchByName\" href=\"#top\">Method: searchByName</a></h3>\nDescription:<br />\nReturns a list of system IDs whose name matches\n  the supplied regular expression(defined by\n  <a href=\"http://docs.oracle.com/javase/1.5.0/docs/api/java/util/regex/Pattern.html\"\n  target=\"_blank\">\n Java representation of regular expressions</a>)\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string regexp - A regular expression\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n              \n\n\t     struct - system\n\t<ul>\n      \t<li> int \"id\"</li>\n      \t<li> string \"name\"</li>\n           <li> dateTime.iso8601 \"last_checkin\" - Last time server\n              successfully checked in </li>\n           <li> dateTime.iso8601 \"last_boot\" - Last server boot time </li>\n           <li> dateTime.iso8601 \"created\" - Server registration time </li>\n\n");
      out.write(" \t</ul>\n \n          </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"sendOsaPing\" href=\"#top\">Method: sendOsaPing</a></h3>\nDescription:<br />\nsend a ping to a system using OSA\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3 class=\"deprecated\"><a name=\"setBaseChannel\" href=\"#top\">Method: setBaseChannel</a></h3>\nDescription:<br />\nAssigns the server to a new baseChannel.\n<p />\n\n\nDeprecated - being replaced by system.setBaseChannel(string sessionKey,\n int serverId, string channelLabel) <p />\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    int channelId\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setBaseChannel\" href=\"#top\">Method: setBaseChannel</a></h3>\nDescription:<br />\nAssigns the server to a new base channel.  If the user provides an empty\n");
      out.write(" string for the channelLabel, the current base channel and all child channels will\n be removed from the system.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string channelLabel\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setChildChannels\" href=\"#top\">Method: setChildChannels</a></h3>\nDescription:<br />\nSubscribe the given server to the child channels provided.  This\n method will unsubscribe the server from any child channels that the server\n is currently subscribed to, but that are not included in the list.  The user may\n provide either a list of channel ids (int) or a list of channel labels (string) as\n input.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\narray:\n<ul>\n    <li>int (deprecated) or string - channelId (deprecated)\n or channelLabel</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n");
      out.write("\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setCustomValues\" href=\"#top\">Method: setCustomValues</a></h3>\nDescription:<br />\nSet custom values for the specified server.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n\t     struct - Map of custom labels to custom values\n\t<ul>\n      \t<li> string \"custom info label\"</li>\n      \t<li> string \"value\"</li>\n    \t</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setDetails\" href=\"#top\">Method: setDetails</a></h3>\nDescription:<br />\nSet server details. All arguments are optional and will only be modified\n if included in the struct.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId - ID of server to lookup details for.\n </li>\n<li>\n\n\t     struct - server details\n\t<ul>\n              <li> string \"profile_name\" - System's profile name </li>\n");
      out.write("              <li> string \"base_entitlement\" - System's base entitlement label.\n                      (enterprise_entitled or unentitle) </li>\n               <li> boolean \"auto_errata_update\" - True if system has\n                          auto errata updates enabled </li>\n               <li> string \"description\" - System description </li>\n               <li> string \"address1\" - System's address line 1. </li>\n               <li> string \"address2\" - System's address line 2. </li>\n           \t<li> string \"city\"</li>\n           \t<li> string \"state\"</li>\n           \t<li> string \"country\"</li>\n           \t<li> string \"building\"</li>\n           \t<li> string \"room\"</li>\n           \t<li> string \"rack\"</li>\n     \t</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setGroupMembership\" href=\"#top\">Method: setGroupMembership</a></h3>\nDescription:<br />\nSet a servers membership in a given group.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n");
      out.write("<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    int serverGroupId\n </li>\n<li>\n\n    boolean member - '1' to assign the given server to\n the given server group, '0' to remove the given server from the given server\n group.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setGuestCpus\" href=\"#top\">Method: setGuestCpus</a></h3>\nDescription:<br />\nSchedule an action of a guest's host, to set that guest's CPU\n          allocation\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n        string sessionKey\n </li>\n<li>\n\n    int sid - The guest's system id\n </li>\n<li>\n\n    int numOfCpus - The number of virtual cpus to\n          allocate to the guest\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionID - the action Id for the schedule action\n              on the host system. \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setGuestMemory\" href=\"#top\">Method: setGuestMemory</a></h3>\nDescription:<br />\nSchedule an action of a guest's host, to set that guest's memory\n");
      out.write("          allocation\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n        string sessionKey\n </li>\n<li>\n\n    int sid - The guest's system id\n </li>\n<li>\n\n    int memory - The amount of memory to\n          allocate to the guest\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nint actionID - the action Id for the schedule action\n              on the host system. \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setLockStatus\" href=\"#top\">Method: setLockStatus</a></h3>\nDescription:<br />\nSet server lock status.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    boolean lockStatus - true to lock the system,\n false to unlock the system.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setPrimaryInterface\" href=\"#top\">Method: setPrimaryInterface</a></h3>\nDescription:<br />\nSets new primary network interface\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n");
      out.write("<li>\n\n    int serverId\n </li>\n<li>\n\n    string interfaceName\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setProfileName\" href=\"#top\">Method: setProfileName</a></h3>\nDescription:<br />\nSet the profile name for the server.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string name - Name of the profile.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setVariables\" href=\"#top\">Method: setVariables</a></h3>\nDescription:<br />\nSets a list of kickstart variables in the cobbler system record\n for the specified server.\n  Note: This call assumes that a system record exists in cobbler for the\n  given system and will raise an XMLRPC fault if that is not the case.\n  To create a system record over xmlrpc use system.createSystemRecord\n\n  To create a system record in the Web UI  please go to\n");
      out.write("  System -&gt; &lt;Specified System&gt; -&gt; Provisioning -&gt;\n  Select a Kickstart profile -&gt; Create Cobbler System Record.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    boolean netboot\n </li>\n<li>\n\narray:\n  <ul>\n   <li>\n          \t     struct - kickstart variable\n\t<ul>\n              \t<li> string \"key\"</li>\n              \t<li> string or int \"value\"</li>\n          \t</ul>\n      </li></ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"tagLatestSnapshot\" href=\"#top\">Method: tagLatestSnapshot</a></h3>\nDescription:<br />\nTags latest system snapshot\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string tagName\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"unentitle\" href=\"#top\">Method: unentitle</a></h3>\n");
      out.write("Description:<br />\nUnentitle the system completely\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string systemid - systemid file\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"upgradeEntitlement\" href=\"#top\">Method: upgradeEntitlement</a></h3>\nDescription:<br />\nAdds an entitlement to a given server.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int serverId\n </li>\n<li>\n\n    string entitlementName - One of:\n          'enterprise_entitled' or 'virtualization_host'.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"whoRegistered\" href=\"#top\">Method: whoRegistered</a></h3>\nDescription:<br />\nReturns information about the user who registered the system\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    int sid - Id of the system in question\n </li>\n</ul>\n<p />\nReturns:\n");
      out.write("<code><ul><li>\n\n\n\n\n\t     struct - user\n\t<ul>\n              \t<li> int \"id\"</li>\n              \t<li> string \"login\"</li>\n                  <li> string \"login_uc\" - upper case version of the login </li>\n                  <li> boolean \"enabled\" - true if user is enabled,\n                         false if the user is disabled </li>\n      \t</ul>\n  \n \n</li></ul>\n</code>\n<p />\n<hr />\n</body>\n</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
