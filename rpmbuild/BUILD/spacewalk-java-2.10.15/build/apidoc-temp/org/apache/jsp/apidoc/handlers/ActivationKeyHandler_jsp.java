/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat9
 * Generated at: 2020-03-09 19:26:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.apidoc.handlers;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ActivationKeyHandler_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n<head>\n<meta http-equiv=\"cache-control\" content=\"no-cache\" />\n\n<style type=\"text/css\">\nul.apidoc {\n   list-style-image: url('/img/parent_node.gif');\n}\n\n.deprecated {\n   text-decoration: line-through;\n}\n</style>\n</head>\n<body>\n<div class=\"spacewalk-toolbar-h1\">\n<h1><i class=\"fa fa-gears\"></i>API Overview</h1>\n</div>\n\n<h2>Description</h2>\n<p><strong>Namespace</strong>:\nactivationkey\n</p>\n<p>Contains methods to access common activation key functions\n available from the web interface.</p>\n<span class=\"small-text\">( <a href=\"/rhn/apidoc/index.jsp\">Return to API Overview</a> )</span>\n<hr />\n\n<div class=\"rounded-box\">\n<h2><a name=\"top\">Available methods</a></h2>\n<ul class=\"apidoc\">\n\n<li><a href=\"#addChildChannels\"/>addChildChannels</a></li>\n<li><a href=\"#addConfigChannels\"/>addConfigChannels</a></li>\n<li><a href=\"#addEntitlements\"/>addEntitlements</a></li>\n<li><a href=\"#addPackageNames\"/>addPackageNames</a></li>\n<li><a href=\"#addPackages\"/>addPackages</a></li>\n<li><a href=\"#addServerGroups\"/>addServerGroups</a></li>\n");
      out.write("<li><a href=\"#checkConfigDeployment\"/>checkConfigDeployment</a></li>\n<li><a href=\"#clone\"/>clone</a></li>\n<li><a href=\"#create\"/>create</a></li>\n<li><a href=\"#create\"/>create</a></li>\n<li><a href=\"#delete\"/>delete</a></li>\n<li><a href=\"#disableConfigDeployment\"/>disableConfigDeployment</a></li>\n<li><a href=\"#enableConfigDeployment\"/>enableConfigDeployment</a></li>\n<li><a href=\"#getDetails\"/>getDetails</a></li>\n<li><a href=\"#listActivatedSystems\"/>listActivatedSystems</a></li>\n<li><a href=\"#listActivationKeys\"/>listActivationKeys</a></li>\n<li><a href=\"#listConfigChannels\"/>listConfigChannels</a></li>\n<li><a href=\"#removeChildChannels\"/>removeChildChannels</a></li>\n<li><a href=\"#removeConfigChannels\"/>removeConfigChannels</a></li>\n<li><a href=\"#removeEntitlements\"/>removeEntitlements</a></li>\n<li><a href=\"#removePackageNames\"/>removePackageNames</a></li>\n<li><a href=\"#removePackages\"/>removePackages</a></li>\n<li><a href=\"#removeServerGroups\"/>removeServerGroups</a></li>\n<li><a href=\"#setConfigChannels\"/>setConfigChannels</a></li>\n");
      out.write("<li><a href=\"#setDetails\"/>setDetails</a></li>\n</ul>\n</div>\n<hr />\n\n<h3> <a name=\"addChildChannels\" href=\"#top\">Method: addChildChannels</a></h3>\nDescription:<br />\nAdd child channels to an activation key.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n<li>\n\narray:\n<ul>\n    <li>string - childChannelLabel</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"addConfigChannels\" href=\"#top\">Method: addConfigChannels</a></h3>\nDescription:<br />\nGiven a list of activation keys and configuration channels,\n this method adds given configuration channels to either the top or\n the bottom (whichever you specify) of an activation key's\n configuration channels list. The ordering of the configuration channels\n provided in the add list is maintained while adding.\n If one of the configuration channels in the 'add' list\n already exists in an activation key, the\n configuration  channel will be re-ranked to the appropriate place.\n");
      out.write("<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n        string sessionKey\n </li>\n<li>\n\narray:\n<ul>\n    <li>string - activationKey</li>\n</ul>\n </li>\n<li>\n\narray:\n<ul>\n    <li>string - List of configuration channel labels in the ranked order.</li>\n</ul>\n </li>\n<li>\n\n    boolean addToTop\n      \t<ul>\n          \t<li>true - To prepend the given channels to the beginning of\n                                 the activation key's config channel list</li>\n          \t<li>false - To append the given channels to the end of\n                                     the activation key's config channel list</li>\n      \t</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"addEntitlements\" href=\"#top\">Method: addEntitlements</a></h3>\nDescription:<br />\nAdd entitlements to an activation key. Currently only\n virtualization_host add-on entitlement is permitted.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n");
      out.write(" </li>\n<li>\n\narray:\n  <ul>\n   <li>string - entitlement label\n   \t<ul>\n     \t<li>virtualization_host</li>\n   \t</ul>\n </li></ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3 class=\"deprecated\"><a name=\"addPackageNames\" href=\"#top\">Method: addPackageNames</a></h3>\nDescription:<br />\nAdd packages to an activation key using package name only.\n<p />\n\n\nDeprecated - being replaced by addPackages(string sessionKey, string key,\n array[packages]) <p />\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n<li>\n\narray:\n<ul>\n    <li>string - packageName</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\nAvailable since: 10.2 <p />\n<hr />\n\n<h3> <a name=\"addPackages\" href=\"#top\">Method: addPackages</a></h3>\nDescription:<br />\nAdd packages to an activation key.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n");
      out.write(" </li>\n<li>\n\n    string key\n </li>\n<li>\n\narray:\n  <ul>\n   <li>\n      \t     struct - packages\n\t<ul>\n              <li> string \"name\" - Package name </li>\n              <li> string \"arch\" - Arch label - Optional </li>\n     \t</ul>\n   </li></ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"addServerGroups\" href=\"#top\">Method: addServerGroups</a></h3>\nDescription:<br />\nAdd server groups to an activation key.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverGroupId</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"checkConfigDeployment\" href=\"#top\">Method: checkConfigDeployment</a></h3>\nDescription:<br />\nCheck configuration file deployment status for the\n activation key specified.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n");
      out.write(" </li>\n<li>\n\n    string key\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n1 if enabled, 0 if disabled, exception thrown otherwise. \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"clone\" href=\"#top\">Method: clone</a></h3>\nDescription:<br />\nClone an existing activation key.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key - Key to be cloned.\n </li>\n<li>\n\n    string cloneDescription - Description of the cloned key.\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nstring - The new activation key. \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"create\" href=\"#top\">Method: create</a></h3>\nDescription:<br />\nCreate a new activation key.\n The activation key parameter passed\n in will be prefixed with the organization ID, and this value will be\n returned from the create call.\n\n Eg. If the caller passes in the key \"foo\" and belong to an organization with\n the ID 100, the actual activation key will be \"100-foo\".\n\n This call allows for the setting of a usage limit on this activation key.\n");
      out.write(" If unlimited usage is desired see the similarly named API method with no\n usage limit argument.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key - Leave empty to have new key autogenerated.\n </li>\n<li>\n\n    string description\n </li>\n<li>\n\n    string baseChannelLabel - Leave empty to accept\n default.\n </li>\n<li>\n\n    int usageLimit - If unlimited usage is desired,\n use the create API that does not include the parameter.\n </li>\n<li>\n\narray:\n  <ul>\n   <li>string - Add-on entitlement label to associate with the\n key.\n   \t<ul>\n     \t<li>virtualization_host</li>\n   \t</ul>\n </li></ul>\n </li>\n<li>\n\n    boolean universalDefault\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nstring - The new activation key. \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"create\" href=\"#top\">Method: create</a></h3>\nDescription:<br />\nCreate a new activation key with unlimited usage.\n The activation key parameter passed\n in will be prefixed with the organization ID, and this value will be\n returned from the create call.\n");
      out.write("\n Eg. If the caller passes in the key \"foo\" and belong to an organization with\n the ID 100, the actual activation key will be \"100-foo\".\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key - Leave empty to have new key autogenerated.\n </li>\n<li>\n\n    string description\n </li>\n<li>\n\n    string baseChannelLabel - Leave empty to accept\n default.\n </li>\n<li>\n\narray:\n  <ul>\n   <li>string - Add-on entitlement label to associate with the\n key.\n   \t<ul>\n     \t<li>virtualization_host</li>\n   \t</ul>\n </li></ul>\n </li>\n<li>\n\n    boolean universalDefault\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\nstring - The new activation key. \n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"delete\" href=\"#top\">Method: delete</a></h3>\nDescription:<br />\nDelete an activation key.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"disableConfigDeployment\" href=\"#top\">Method: disableConfigDeployment</a></h3>\n");
      out.write("Description:<br />\nDisable configuration file deployment for the specified activation key.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"enableConfigDeployment\" href=\"#top\">Method: enableConfigDeployment</a></h3>\nDescription:<br />\nEnable configuration file deployment for the specified activation key.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"getDetails\" href=\"#top\">Method: getDetails</a></h3>\nDescription:<br />\nLookup an activation key's details.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n\n\n\t     struct - activation key\n\t<ul>\n     \t<li> string \"key\"</li>\n");
      out.write("     \t<li> string \"description\"</li>\n     \t<li> int \"usage_limit\"</li>\n     \t<li> string \"base_channel_label\"</li>\n         <li>array \"child_channel_labels\"\n        <ul>\n            <li>string childChannelLabel</li>\n        </ul>\n    </li>\n         <li>array \"entitlements\"\n        <ul>\n            <li>string entitlementLabel</li>\n        </ul>\n    </li>\n         <li>array \"server_group_ids\"\n        <ul>\n            <li>string serverGroupId</li>\n        </ul>\n    </li>\n         <li>array \"package_names\"\n        <ul>\n            <li>string packageName - (deprecated by packages)</li>\n        </ul>\n    </li>\n         <li>array \"packages\"\n        <ul>\n            <li>\n       \t     struct - package\n\t<ul>\n             <li> string \"name\" - packageName </li>\n             <li> string \"arch\" - archLabel - optional </li>\n       \t</ul>\n                </li>\n        </ul>\n    </li>\n     \t<li> boolean \"universal_default\"</li>\n     \t<li> boolean \"disabled\"</li>\n   \t</ul>\n  \n \n</li></ul>\n</code>\n<p />\nAvailable since: 10.2 <p />\n");
      out.write("<hr />\n\n<h3> <a name=\"listActivatedSystems\" href=\"#top\">Method: listActivatedSystems</a></h3>\nDescription:<br />\nList the systems activated with the key provided.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n       \t     struct - system structure\n\t<ul>\n               <li> int \"id\" - System id </li>\n           \t<li> string \"hostname\"</li>\n               <li> dateTime.iso8601 \"last_checkin\" - Last time server\n               successfully checked in </li>\n       \t</ul>\n   </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"listActivationKeys\" href=\"#top\">Method: listActivationKeys</a></h3>\nDescription:<br />\nList activation keys that are visible to the\n user.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n     \n\n\t     struct - activation key\n\t<ul>\n     \t<li> string \"key\"</li>\n     \t<li> string \"description\"</li>\n     \t<li> int \"usage_limit\"</li>\n");
      out.write("     \t<li> string \"base_channel_label\"</li>\n         <li>array \"child_channel_labels\"\n        <ul>\n            <li>string childChannelLabel</li>\n        </ul>\n    </li>\n         <li>array \"entitlements\"\n        <ul>\n            <li>string entitlementLabel</li>\n        </ul>\n    </li>\n         <li>array \"server_group_ids\"\n        <ul>\n            <li>string serverGroupId</li>\n        </ul>\n    </li>\n         <li>array \"package_names\"\n        <ul>\n            <li>string packageName - (deprecated by packages)</li>\n        </ul>\n    </li>\n         <li>array \"packages\"\n        <ul>\n            <li>\n       \t     struct - package\n\t<ul>\n             <li> string \"name\" - packageName </li>\n             <li> string \"arch\" - archLabel - optional </li>\n       \t</ul>\n                </li>\n        </ul>\n    </li>\n     \t<li> boolean \"universal_default\"</li>\n     \t<li> boolean \"disabled\"</li>\n   \t</ul>\n \n   </li></ul>\n \n</li></ul>\n</code>\n<p />\nAvailable since: 10.2 <p />\n<hr />\n\n<h3> <a name=\"listConfigChannels\" href=\"#top\">Method: listConfigChannels</a></h3>\n");
      out.write("Description:<br />\nList configuration channels\n associated to an activation key.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\narray:\n  <ul>\n   <li>\n     \n\n\t     struct - Configuration Channel information\n\t<ul>\n   \t<li> int \"id\"</li>\n   \t<li> int \"orgId\"</li>\n   \t<li> string \"label\"</li>\n   \t<li> string \"name\"</li>\n   \t<li> string \"description\"</li>\n   \t<li> struct \"configChannelType\"</li>\n   \n\n\t     struct - Configuration Channel Type information\n\t<ul>\n   \t<li> int \"id\"</li>\n   \t<li> string \"label\"</li>\n   \t<li> string \"name\"</li>\n   \t<li> int \"priority\"</li>\n \t</ul>\n \n \t</ul>\n \n   </li></ul>\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"removeChildChannels\" href=\"#top\">Method: removeChildChannels</a></h3>\nDescription:<br />\nRemove child channels from an activation key.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n<li>\n\narray:\n<ul>\n    <li>string - childChannelLabel</li>\n");
      out.write("</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"removeConfigChannels\" href=\"#top\">Method: removeConfigChannels</a></h3>\nDescription:<br />\nRemove configuration channels from the given activation keys.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey \n </li>\n<li>\n\narray:\n<ul>\n    <li>string - activationKey</li>\n</ul>\n </li>\n<li>\n\narray:\n<ul>\n    <li>string - configChannelLabel</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"removeEntitlements\" href=\"#top\">Method: removeEntitlements</a></h3>\nDescription:<br />\nRemove entitlements (by label) from an activation key.\n Currently only virtualization_host add-on entitlement is permitted.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n<li>\n\narray:\n  <ul>\n   <li>string - entitlement label\n   \t<ul>\n     \t<li>virtualization_host</li>\n");
      out.write("   \t</ul>\n </li></ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3 class=\"deprecated\"><a name=\"removePackageNames\" href=\"#top\">Method: removePackageNames</a></h3>\nDescription:<br />\nRemove package names from an activation key.\n<p />\n\n\nDeprecated - being replaced by removePackages(string sessionKey, string key,\n array[packages]) <p />\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n<li>\n\narray:\n<ul>\n    <li>string - packageName</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\nAvailable since: 10.2 <p />\n<hr />\n\n<h3> <a name=\"removePackages\" href=\"#top\">Method: removePackages</a></h3>\nDescription:<br />\nRemove package names from an activation key.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n<li>\n\narray:\n  <ul>\n   <li>\n      \t     struct - packages\n");
      out.write("\t<ul>\n              <li> string \"name\" - Package name </li>\n              <li> string \"arch\" - Arch label - Optional </li>\n     \t</ul>\n   </li></ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"removeServerGroups\" href=\"#top\">Method: removeServerGroups</a></h3>\nDescription:<br />\nRemove server groups from an activation key.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n<li>\n\narray:\n<ul>\n    <li>int - serverGroupId</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setConfigChannels\" href=\"#top\">Method: setConfigChannels</a></h3>\nDescription:<br />\nReplace the existing set of\n configuration channels on the given activation keys.\n Channels are ranked by their order in the array.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey \n </li>\n<li>\n\narray:\n");
      out.write("<ul>\n    <li>string - activationKey</li>\n</ul>\n </li>\n<li>\n\narray:\n<ul>\n    <li>string - configChannelLabel</li>\n</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n \n</li></ul>\n</code>\n<p />\n<hr />\n\n<h3> <a name=\"setDetails\" href=\"#top\">Method: setDetails</a></h3>\nDescription:<br />\nUpdate the details of an activation key.\n<p />\n\n\n\n\nParameters:<br />\n<ul>\n<li>\n\n    string sessionKey\n </li>\n<li>\n\n    string key\n </li>\n<li>\n\n\t     struct - activation key\n\t<ul>\n       <li> string \"description\" - optional </li>\n       <li> string \"base_channel_label\" - optional -\n   to set default base channel set to empty string or 'none' </li>\n       <li> int \"usage_limit\" - optional </li>\n       <li> boolean \"unlimited_usage_limit\" - Set true\n   for unlimited usage and to override usage_limit </li>\n       <li> boolean \"universal_default\" - optional </li>\n       <li> boolean \"disabled\" - optional </li>\n \t</ul>\n </li>\n</ul>\n<p />\nReturns:\n<code><ul><li>\n\n\n    int - 1 on success, exception thrown otherwise.\n");
      out.write(" \n</li></ul>\n</code>\n<p />\n<hr />\n</body>\n</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
