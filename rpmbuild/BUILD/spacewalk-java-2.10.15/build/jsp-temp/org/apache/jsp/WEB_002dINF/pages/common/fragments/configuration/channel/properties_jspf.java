/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat9
 * Generated at: 2020-03-09 19:26:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages.common.fragments.configuration.channel;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class properties_jspf extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/pages/common/fragments/configuration/channel/propertybody.jspf", Long.valueOf(1583781914000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- Properties of the channel itself  -->\n<div class=\"panel panel-default\">\n    <div class=\"panel-heading\">\n        <h4>\n            <bean:message key=\"channelOverview.jsp.properties\" />\n            <rhn:require acl=\"config_channel_type(normal); user_role(config_admin)\"\n                         mixins=\"com.redhat.rhn.common.security.acl.ConfigAclHandler\">\n                <c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${channelOverviewForm.map.editing != 'true'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                    (<a\n                        href=\"/rhn/configuration/ChannelOverview.do?ccid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ccid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&amp;editing=true\"><bean:message\n                            key=\"channelOverview.jsp.choose-edit\" /></a>)\n                    </c:if>\n                </rhn:require>\n        </h4>\n    </div>\n    <div class=\"panel-body\">\n    <c:choose>\n    <c:when test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${channelOverviewForm.map.editing == 'true'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n        <p><bean:message key=\"channelOverview.jsp.edit-instruction\" /></p>\n        <html:form action=\"/configuration/ChannelOverview.do?ccid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ccid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" styleClass=\"form-horizontal\">\n            <rhn:csrf />\n            <html:hidden property=\"submitted\" value=\"true\"/>\n            <html:hidden property=\"creating\" value=\"false\"/>\n            ");
      out.write("<div class=\"form-group\">\n    <label class=\"col-lg-3 control-label\">\n        <bean:message key=\"channelOverview.jsp.name-edit\" />\n    </label>\n    <div class=\"col-lg-6\">\n        <html:text property=\"cofName\" maxlength=\"128\" size=\"18\" styleClass=\"form-control\"></html:text>\n    </div>\n</div>\n<div class=\"form-group\">\n    <label class=\"col-lg-3 control-label\">\n    <bean:message key=\"channelOverview.jsp.label-edit\" />\n    </label>\n    <div class=\"col-lg-6\">\n        <html:text property=\"cofLabel\" maxlength=\"64\" styleClass=\"form-control\" size=\"18\"></html:text>\n    </div>\n</div>\n<div class=\"form-group\">\n    <label class=\"col-lg-3 control-label\">\n    <bean:message key=\"channelOverview.jsp.descr-edit\" />\n    </label>\n    <div class=\"col-lg-6\">\n        <html:textarea property=\"cofDescription\" rows=\"4\" styleClass=\"form-control\" cols=\"40\"></html:textarea>\n    </div>\n</div>\n<div class=\"form-group\">\n    <div class=\"col-lg-offset-3 col-lg-6\">\n    <html:submit styleClass=\"btn btn-success\">\n        <c:choose>\n            <c:when test='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${channel != null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'>\n                <bean:message key=\"channel.edit.jsp.editchannel\" />\n            </c:when>\n            <c:otherwise>\n                <bean:message key=\"channelOverview.jsp.submitCreate\" />\n            </c:otherwise>\n        </c:choose>\n    </html:submit>\n    </div>\n</div>\n");
      out.write("\n        </html:form>\n    </c:when>\n    <c:otherwise>\n        <div class=\"form-group row\">\n            <label class=\"col-lg-3 control-label\">\n                <bean:message key=\"channelOverview.jsp.name\" />\n            </label>\n            <div class=\"col-lg-9\">\n                <bean:write name=\"channelOverviewForm\" property=\"cofName\"></bean:write>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-lg-3 control-label\">\n                <bean:message key=\"channelOverview.jsp.label\" />\n            </label>\n            <div class=\"col-lg-9\">\n                <bean:write name=\"channelOverviewForm\" property=\"cofLabel\"></bean:write>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-lg-3 control-label\">\n                <bean:message key=\"channelOverview.jsp.descr\" />\n            </label>\n            <div class=\"col-lg-9\">\n                <bean:write name=\"channelOverviewForm\" property=\"cofDescription\"></bean:write>\n            </div>\n");
      out.write("        </div>\n    </c:otherwise>\n</c:choose>\n    </div>\n</div>\n\n\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
