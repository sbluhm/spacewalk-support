/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat9
 * Generated at: 2020-03-09 19:26:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages.common.fragments.configuration.channel;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class summary_jspf extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--  Summary info for a specific channel  -->\n<div class=\"panel panel-default\">\n        <div class=\"panel-heading\">\n                <h4><bean:message key=\"channelOverview.jsp.information\" /></h4>\n        </div>\n        <div class=\"panel-body\">\n                <table class=\"table\">\n                <tr>\n                        <th><bean:message key=\"channelOverview.jsp.numfiles-header\" /></th>\n                        <c:choose>\n                                <c:when test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.numFiles + summary.numDirs + summary.numSymlinks > 0}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                                        <td><bean:message key=\"channelOverview.jsp.numfiles\"\n                                                arg0=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.numFiles}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" arg1=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.numDirs}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" arg2=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.numSymlinks}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n                                                <br />(<a\n                                                href=\"/rhn/configuration/ChannelFiles.do?ccid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${channel.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"><bean:message\n                                                key=\"channelOverview.jsp.numfiles-total\"\n                                                arg0=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.numFiles + summary.numDirs + summary.numSymlinks}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" /></a>)</td>\n                                </c:when>\n                                <c:otherwise>\n                                        <td><bean:message key=\"channelOverview.jsp.numfiles-none\" /></td>\n                                </c:otherwise>\n                        </c:choose>\n                </tr>\n                ");
      out.write("\n                <rhn:require acl=\"config_channel_type(normal)\"\n                             mixins=\"com.redhat.rhn.common.security.acl.ConfigAclHandler\">\n              <tr>\n                        <th><bean:message key=\"channelOverview.jsp.systems-header\" /></th>\n                        <c:choose>\n                                <c:when test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.numSystems == 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                                        <td><a href=\"/rhn/configuration/channel/ChannelSystems.do?ccid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${channel.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"><bean:message\n                                                key=\"onesystem.message\"/></a>\n                                        <bean:message key=\"channelOverview.jsp.systems-subscribed\" /></td>\n                                </c:when>\n                                <c:when test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.numSystems > 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                                        <td><a href=\"/rhn/configuration/channel/ChannelSystems.do?ccid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${channel.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"><bean:message\n                                                key=\"manysystems.message\" arg0=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.numSystems}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" /></a>\n                                        <bean:message key=\"channelOverview.jsp.systems-subscribed\" /></td>\n                                </c:when>\n                                <c:otherwise>\n                                        <td><bean:message key=\"channelOverview.jsp.systems-none\" /></td>\n                                </c:otherwise>\n                        </c:choose>\n              </tr>\n            </rhn:require>\n                <c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${channel.configChannelType.label == 'normal'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                        <tr>\n                                <th><bean:message key=\"channelOverview.jsp.recentsystem-header\" /></th>\n                                <c:choose>\n                                        <c:when test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.numSystems > 0}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                                                <td>\n                                                  <rhn:icon type=\"header-system\" title=\"system.common.systemAlt\" />\n                                                  <a href=\"/rhn/systems/details/configuration/Overview.do?&amp;sid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.mostRecentSystem.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                                                    <c:out value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.mostRecentSystem.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n                                                  </a><br />\n                                                  ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.systemDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n                                                </td>\n                                        </c:when>\n                                        <c:otherwise>\n                                                <td><bean:message key=\"channelOverview.jsp.recentsystem-none\" /></td>\n                                        </c:otherwise>\n                                </c:choose>\n                        </tr>\n                </c:if>\n                <tr>\n                        <th><bean:message key=\"channelOverview.jsp.recentfile-header\" /></th>\n                        <td><c:choose>\n                                <c:when test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.numFiles + summary.numDirs + summary.numSymlinks > 0}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                                        <c:choose>\n                                                <c:when test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.mostRecentMod.configFile.latestConfigRevision.directory}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                                                        <rhn:icon type=\"header-folder\" title=\"config.common.dirAlt\" />\n                                                </c:when>\n                                                <c:when test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.mostRecentMod.configFile.latestConfigRevision.symlink}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                                                        <rhn:icon type=\"header-symlink\" title=\"config.common.symlinkAlt\" />\n                                                </c:when>\n                                                <c:otherwise>\n                                                        <rhn:icon type=\"header-file\" title=\"config.common.fileAlt\" />\n                                                </c:otherwise>\n                                        </c:choose>\n                                        <a href=\"/rhn/configuration/file/FileDetails.do?cfid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.mostRecentMod.configFile.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                                          <c:out value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.mostRecentMod.configFile.configFileName.path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n                                        </a><br />\n\n                                        <c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.mostRecentMod.configFile.latestConfigRevision.changedBy != null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                                          ");
      out.write("\n                                          <c:set var=\"userbeanarg\" scope=\"request\">\n                                            <rhn:require acl=\"user_role(org_admin)\">\n                                              <a href=\"/rhn/users/UserDetails.do?uid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.mostRecentMod.configFile.latestConfigRevision.changedBy.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                                            </rhn:require>\n                                            <rhn:icon type=\"header-user\" title=\"user.common.userAlt\" />\n                                            <c:out value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.mostRecentMod.configFile.latestConfigRevision.changedBy.login}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n                                            <rhn:require acl=\"user_role(org_admin)\">\n                                              </a>\n                                            </rhn:require>\n                                          </c:set>\n                                          <bean:message key=\"channelOverview.jsp.recentfile\"\n                                            arg0=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userbeanarg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n                                                arg1=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.recentFileDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\n                                        </c:if>\n                                        <c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.mostRecentMod.configFile.latestConfigRevision.changedBy == null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n                                          <bean:message key=\"filedetails.details.jspf.modifiedBy-unknown\"\n                                                arg0=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${summary.recentFileDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\n                                        </c:if>\n                                  </c:when>\n                                <c:otherwise>\n                                        <bean:message key=\"channelOverview.jsp.recentfile-none\" />\n                                </c:otherwise>\n                        </c:choose></td>\n                </tr>\n        </table>\n\n        </div>\n</div>\n\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
